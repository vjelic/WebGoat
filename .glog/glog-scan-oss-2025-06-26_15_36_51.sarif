{
  "version": "2.1.0",
  "$schema": "https://json.schemastore.org/sarif-2.1.0.json",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "owasp-depscan",
          "semanticVersion": "6.0.0",
          "informationUri": "https://github.com/owasp-dep-scan/dep-scan",
          "properties": {
            "protocol_version": "v1.0.0",
            "scanner_name": "owasp-depscan",
            "scanner_version": "6.0.0",
            "db": "https://github.com/AppThreat/vulnerability-db",
            "scan_mode": "source"
          },
          "rules": [ 
            {
              "id": "CVE-2015-9251/pkg:npm/jquery@1.10.2",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery@1.10.2\nCVE: CVE-2015-9251\nFix: Update to 1.12.2 or later\n\ndepscan:insights: Direct dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery@<1.12.2\n"
              },
              "fullDescription": {
                "text": "# Cross Site Scripting (XSS) in jquery\nAffected versions of `jquery` interpret `text/javascript` responses from cross origin ajax requests, and automatically execute the contents in `jQuery.globalEval`, even when the ajax request doesn\u0027t contain the `dataType` option.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.\nUpgrade to version 1.12.2 or later"
              },
              "help": {
                "text": "Update to 1.12.2 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2015-9251",
              "properties": {
                "tags": [
                    "CVE-2015-9251"
                ]
              }
            },
            
            {
              "id": "CVE-2016-7103/pkg:npm/jquery-ui@1.10.4",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery-ui@1.10.4\nCVE: CVE-2016-7103\nFix: Update to 1.12.0 or later\n\ndepscan:insights: Indirect dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery-ui@<1.12.0\n"
              },
              "fullDescription": {
                "text": "# jQuery UI vulnerable to Cross site Scripting in dialog closeText\nAffected versions of `jquery ui` are vulnerable to a cross site scripting vulnerability when arbitrary user input is supplied as the value of the `closeText` parameter in the `dialog` function. \n\njQuery UI is a library for manipulating UI elements via jQuery.\n\nVersion 1.11.4 has a cross site scripting (XSS) vulnerability in the `closeText` parameter of the `dialog`\tfunction.\tIf your application passes user input to this parameter, it may be vulnerable to XSS via this attack vector.\n\n\n## Recommendation\n\nUpgrade to jQuery UI 1.12.0 or later.\nUpgrade to version 1.12.0 or later"
              },
              "help": {
                "text": "Update to 1.12.0 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2016-7103",
              "properties": {
                "tags": [
                    "CVE-2016-7103"
                ]
              }
            },
            
            {
              "id": "CVE-2021-41183/pkg:npm/jquery-ui@1.10.4",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery-ui@1.10.4\nCVE: CVE-2021-41183\nFix: Update to 1.13.0 or later\n\ndepscan:insights: Indirect dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery-ui@<1.13.0\n"
              },
              "fullDescription": {
                "text": "# XSS in `*Text` options of the Datepicker widget in jquery ui\n### Impact\nAccepting the value of various `*Text` options of the Datepicker widget from untrusted sources may execute untrusted code. For example, initializing the datepicker in the following way:\n```js\n$( \"#datepicker\" ).datepicker( {\n\tshowButtonPanel: true,\n\tshowOn: \"both\",\n\tcloseText: \"\u003cscript\u003edoEvilThing( \u0027closeText XSS\u0027 )\u003c/script\u003e\",\n\tcurrentText: \"\u003cscript\u003edoEvilThing( \u0027currentText XSS\u0027 )\u003c/script\u003e\",\n\tprevText: \"\u003cscript\u003edoEvilThing( \u0027prevText XSS\u0027 )\u003c/script\u003e\",\n\tnextText: \"\u003cscript\u003edoEvilThing( \u0027nextText XSS\u0027 )\u003c/script\u003e\",\n\tbuttonText: \"\u003cscript\u003edoEvilThing( \u0027buttonText XSS\u0027 )\u003c/script\u003e\",\n\tappendText: \"\u003cscript\u003edoEvilThing( \u0027appendText XSS\u0027 )\u003c/script\u003e\",\n} );\n```\nwill call `doEvilThing` with 6 different parameters coming from all `*Text` options.\n\n### Patches\nThe issue is fixed in jQuery UI 1.13.0. The values passed to various `*Text` options are now always treated as pure text, not HTML.\n\n### Workarounds\nA workaround is to not accept the value of the `*Text` options from untrusted sources.\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues). If you don\u0027t find an answer, open a new issue.\nUpgrade to version 1.13.0 or later"
              },
              "help": {
                "text": "Update to 1.13.0 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-41183",
              "properties": {
                "tags": [
                    "CVE-2021-41183"
                ]
              }
            },
            
            {
              "id": "CVE-2021-41182/pkg:npm/jquery-ui@1.10.4",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery-ui@1.10.4\nCVE: CVE-2021-41182\nFix: Update to 1.13.0 or later\n\ndepscan:insights: Indirect dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery-ui@<1.13.0\n"
              },
              "fullDescription": {
                "text": "# XSS in the `altField` option of the Datepicker widget in jquery ui\n### Impact\nAccepting the value of the `altField` option of the Datepicker widget from untrusted sources may execute untrusted code. For example, initializing the datepicker in the following way:\n```js\n$( \"#datepicker\" ).datepicker( {\n\taltField: \"\u003cimg onerror=\u0027doEvilThing()\u0027 src=\u0027/404\u0027 /\u003e\",\n} );\n```\nwill call the `doEvilThing` function.\n\n### Patches\nThe issue is fixed in jQuery UI 1.13.0. Any string value passed to the `altField` option is now treated as a CSS selector.\n\n### Workarounds\nA workaround is to not accept the value of the `altField` option from untrusted sources.\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues). If you don\u0027t find an answer, open a new issue.\nUpgrade to version 1.13.0 or later"
              },
              "help": {
                "text": "Update to 1.13.0 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-41182",
              "properties": {
                "tags": [
                    "CVE-2021-41182"
                ]
              }
            },
            
            {
              "id": "CVE-2021-41184/pkg:npm/jquery-ui@1.10.4",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery-ui@1.10.4\nCVE: CVE-2021-41184\nFix: Update to 1.13.0 or later\n\ndepscan:insights: Indirect dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery-ui@<1.13.0\n"
              },
              "fullDescription": {
                "text": "# XSS in the `of` option of the `.position()` util in jquery ui\n### Impact\nAccepting the value of the `of` option of the [`.position()` (https://api.jqueryui.com/position/) util from untrusted sources may execute untrusted code. For example, invoking the following code:\n```js\n$( \"#element\" ).position( {\n\tmy: \"left top\",\n\tat: \"right bottom\",\n\tof: \"\u003cimg onerror=\u0027doEvilThing()\u0027 src=\u0027/404\u0027 /\u003e\",\n\tcollision: \"none\"\n} );\n```\nwill call the `doEvilThing()` function.\n\n### Patches\nThe issue is fixed in jQuery UI 1.13.0. Any string value passed to the `of` option is now treated as a CSS selector.\n\n### Workarounds\nA workaround is to not accept the value of the `of` option from untrusted sources.\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues). If you don\u0027t find an answer, open a new issue.\nUpgrade to version 1.13.0 or later"
              },
              "help": {
                "text": "Update to 1.13.0 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2021-41184",
              "properties": {
                "tags": [
                    "CVE-2021-41184"
                ]
              }
            },
            
            {
              "id": "CVE-2022-31160/pkg:npm/jquery-ui@1.10.4",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery-ui@1.10.4\nCVE: CVE-2022-31160\nFix: Update to 1.13.2 or later\n\ndepscan:insights: Indirect dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery-ui@<1.13.2\n"
              },
              "fullDescription": {
                "text": "# jQuery UI vulnerable to XSS when refreshing a checkboxradio with an HTML like initial text label\n### Impact\nInitializing a checkboxradio widget on an input enclosed within a label makes that parent label contents considered as the input label. If you call `.checkboxradio( \"refresh\" )` on such a widget and the initial HTML contained encoded HTML entities, they will erroneously get decoded. This can lead to potentially executing JavaScript code.\n\nFor example, starting with the following initial secure HTML:\n```html\n\u003clabel\u003e\n\t\u003cinput id=\"test input\"\u003e\n\t\u0026lt;img src=x onerror=\"alert(1)\"\u0026gt;\n\u003c/label\u003e\n```\nand calling:\n```js\n$( \"#test input\" ).checkboxradio();\n$( \"#test input\" ).checkboxradio( \"refresh\" );\n```\nwill turn the initial HTML into:\n```html\n\u003clabel\u003e\n\t\u003c!\t some jQuery UI elements\t \u003e\n\t\u003cinput id=\"test input\"\u003e\n\t\u003cimg src=x onerror=\"alert(1)\"\u003e\n\u003c/label\u003e\n```\nand the alert will get executed.\n\n### Patches\nThe bug has been patched in jQuery UI 1.13.2.\n\n### Workarounds\nTo remediate the issue, if you can change the initial HTML, you can wrap all the non input contents of the `label` in a `span`:\n```html\n\u003clabel\u003e\n\t\u003cinput id=\"test input\"\u003e\n\t\u003cspan\u003e\u0026lt;img src=x onerror=\"alert(1)\"\u0026gt;\u003c/span\u003e\n\u003c/label\u003e\n```\n\n### References\nhttps://blog.jqueryui.com/2022/07/jquery ui 1 13 2 released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated desc). If you don\u0027t find an answer, open a new issue.\nUpgrade to version 1.13.2 or later"
              },
              "help": {
                "text": "Update to 1.13.2 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2022-31160",
              "properties": {
                "tags": [
                    "CVE-2022-31160"
                ]
              }
            },
            
            {
              "id": "CVE-2019-11358/pkg:npm/jquery@1.10.2",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery@1.10.2\nCVE: CVE-2019-11358\nFix: Update to 3.4.0 or later\n\ndepscan:insights: Direct dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery@>=1.1.4-<3.4.0\n"
              },
              "fullDescription": {
                "text": "# XSS in jQuery as used in Drupal, Backdrop CMS, and other products\njQuery from 1.1.4 until 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles `jQuery.extend(true, {}, ...)` because of `Object.prototype` pollution. If an unsanitized source object contained an enumerable `__proto__` property, it could extend the native `Object.prototype`.\nUpgrade to version 3.4.0 or later"
              },
              "help": {
                "text": "Update to 3.4.0 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2019-11358",
              "properties": {
                "tags": [
                    "CVE-2019-11358"
                ]
              }
            },
            
            {
              "id": "CVE-2020-11023/pkg:npm/jquery@1.10.2",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery@1.10.2\nCVE: CVE-2020-11023\nFix: Update to 3.5.0 or later\n\ndepscan:insights: Direct dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery@>=1.0.3-<3.5.0\n"
              },
              "fullDescription": {
                "text": "# Potential XSS vulnerability in jQuery\n### Impact\nPassing HTML containing `\u003coption\u003e` elements from untrusted sources\t even after sanitizing them\t to one of jQuery\u0027s DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround this issue without upgrading, use [DOMPurify (https://github.com/cure53/DOMPurify) with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery 3 5 0 released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo (https://github.com/jquery/jquery/issues). If you don\u0027t find an answer, open a new issue.\nUpgrade to version 3.5.0 or later"
              },
              "help": {
                "text": "Update to 3.5.0 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-11023",
              "properties": {
                "tags": [
                    "CVE-2020-11023"
                ]
              }
            },
            
            {
              "id": "CVE-2020-11022/pkg:npm/jquery@1.10.2",
              "shortDescription": {
                "text": "Vulnerable pkg: npm/jquery@1.10.2\nCVE: CVE-2020-11022\nFix: Update to 3.5.0 or later\n\ndepscan:insights: Direct dependency\ndepscan:prioritized: false\naffectedVersionRange: jquery@>=1.2.0-<3.5.0\n"
              },
              "fullDescription": {
                "text": "# Potential XSS vulnerability in jQuery\n### Impact\nPassing HTML from untrusted sources\t even after sanitizing it\t to one of jQuery\u0027s DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround the issue without upgrading, adding the following to your code:\n\n```js\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nYou need to use at least jQuery 1.12/2.2 or newer to be able to apply this workaround.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery 3 5 0 released/\nhttps://jquery.com/upgrade guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo (https://github.com/jquery/jquery/issues). If you don\u0027t find an answer, open a new issue.\nUpgrade to version 3.5.0 or later"
              },
              "help": {
                "text": "Update to 3.5.0 or later"
              },
              "helpUri": "https://nvd.nist.gov/vuln/detail/CVE-2020-11022",
              "properties": {
                "tags": [
                    "CVE-2020-11022"
                ]
              }
            }
            
          ]
        }
      },
      "results": [ 
        {
          "ruleId": "CVE-2015-9251/pkg:npm/jquery@1.10.2",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2015-9251 in pkg npm/jquery@1.10.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2015-9251 in pkg npm/jquery@1.10.2"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2016-7103/pkg:npm/jquery-ui@1.10.4",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2016-7103 in pkg npm/jquery-ui@1.10.4"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2016-7103 in pkg npm/jquery-ui@1.10.4"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2021-41183/pkg:npm/jquery-ui@1.10.4",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2021-41183 in pkg npm/jquery-ui@1.10.4"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2021-41183 in pkg npm/jquery-ui@1.10.4"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2021-41182/pkg:npm/jquery-ui@1.10.4",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2021-41182 in pkg npm/jquery-ui@1.10.4"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2021-41182 in pkg npm/jquery-ui@1.10.4"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2021-41184/pkg:npm/jquery-ui@1.10.4",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2021-41184 in pkg npm/jquery-ui@1.10.4"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2021-41184 in pkg npm/jquery-ui@1.10.4"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2022-31160/pkg:npm/jquery-ui@1.10.4",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2022-31160 in pkg npm/jquery-ui@1.10.4"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2022-31160 in pkg npm/jquery-ui@1.10.4"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2019-11358/pkg:npm/jquery@1.10.2",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2019-11358 in pkg npm/jquery@1.10.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2019-11358 in pkg npm/jquery@1.10.2"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2020-11023/pkg:npm/jquery@1.10.2",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2020-11023 in pkg npm/jquery@1.10.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2020-11023 in pkg npm/jquery@1.10.2"
              }
            }
          ]
        }
        ,
        
        {
          "ruleId": "CVE-2020-11022/pkg:npm/jquery@1.10.2",
          "level": "warning",
                    "message": {
            "text": "Vulnerability CVE-2020-11022 in pkg npm/jquery@1.10.2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "lockfile",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "startLine": 1
                }
              },
              "message": {
                "text": "Vulnerability CVE-2020-11022 in pkg npm/jquery@1.10.2"
              }
            }
          ]
        }
        
        
      ]
    }
  ]
}