{
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "GLOG",
          "organization": "GLOG",
          "fullName": "Glog, Making software more secure",
          "version": "1.0.0",
          "semanticVersion": "1.0.0",
          "informationUri": "https://www.glog.ai",
          "rules": [
            {
              "id": "glog-d72cef95-d463-4c78-9fa7-a7b7d67066af",
              "shortDescription": {
                "text": "Potential Command Injection."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#COMMAND_INJECTION",
              "relationships": [
                {
                  "target": {
                    "id": "78",
                    "guid": "de860c32-bc93-5e70-89d7-0877e5abaefb",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "COMMAND_INJECTION"
                ]
              }
            },
            {
              "id": "glog-41a6929f-b725-4baa-a319-1622ebfd00d4",
              "shortDescription": {
                "text": "This class could be used as deserialization gadget."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#DESERIALIZATION_GADGET",
              "relationships": [
                {
                  "target": {
                    "id": "502",
                    "guid": "ff25cc2c-fffa-57bc-8f05-4b360dd88816",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "DESERIALIZATION_GADGET"
                ]
              }
            },
            {
              "id": "glog-6b2dd09d-2c48-4f40-be9d-4ebafa0f5509",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-41ac0734-badc-4c0d-ae3e-22f07932daff",
              "shortDescription": {
                "text": "Spring File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_FILE_DISCLOSURE",
              "properties": {
                "tags": [
                  "SPRING_FILE_DISCLOSURE"
                ]
              }
            },
            {
              "id": "glog-64a5ee70-2338-443a-82fa-9c1d846ae132",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-ce4269b2-0ae2-4b60-97d2-5409c8a4f03d",
              "shortDescription": {
                "text": "Spring CSRF protection disabled."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_PROTECTION_DISABLED",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_PROTECTION_DISABLED"
                ]
              }
            },
            {
              "id": "glog-956627dd-f931-4ea5-b9ff-fc3edbbf6f1b",
              "shortDescription": {
                "text": "Spring File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_FILE_DISCLOSURE",
              "properties": {
                "tags": [
                  "SPRING_FILE_DISCLOSURE"
                ]
              }
            },
            {
              "id": "glog-9244df5f-8504-415f-b2ea-99598717581f",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-858307b2-1334-428e-8c75-94e95beb476e",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-385fda58-a1db-4e0b-bd10-969c497d2b15",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-59e2217a-b9b5-4a4f-9074-da6d581dbaa3",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-d16bf7b2-e392-4545-b774-8a58aa108876",
              "shortDescription": {
                "text": "Format String Manipulation."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#FORMAT_STRING_MANIPULATION",
              "properties": {
                "tags": [
                  "FORMAT_STRING_MANIPULATION"
                ]
              }
            },
            {
              "id": "glog-6882b9ef-f3cd-4a3c-96ec-bb440c8ad5c4",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-3f784fcb-bdb9-4265-9b34-470d2427322b",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-5b13133f-471f-4511-868d-d137739dfa0f",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-2afadd2b-50c8-447e-bcc1-ae416f0fdc2d",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-b60e4a14-d2bc-4cb6-a43b-8cc6c429f446",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-49cd1747-08eb-4050-b3b7-c9181dc3bf7c",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-93c060e3-42c8-4a42-8095-1fc526c654bb",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-ce911763-f3ea-457e-ab1d-5ffcc294ac89",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-69da0966-9315-451f-a2a4-f9bda3aa250b",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-732061c1-4fcb-40d1-8740-84e995589bb6",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-f6d5f4e5-c3eb-4ef3-9083-ce7e41318b79",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-45a694a4-d9bb-4e51-a473-84bd15f04f12",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-d062a9a7-ab9e-46e4-ae9f-84ce4977ed24",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-68064fe4-a091-405f-a685-7faf97c449de",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userId<br/><pre>Field name: verifyMethod<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-74f4f163-0841-4f5d-aef4-d726b60d4c9a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: select<br/><pre>Field name: radio<br/><pre>Field name: checkbox<br/><pre>Field name: shortInput<br/><pre>Field name: readOnlyInput<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-433504e6-f2bc-4dfa-af45-1bc778304e0f",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: field1<br/><pre>Field name: field2<br/><pre>Field name: field3<br/><pre>Field name: field4<br/><pre>Field name: field5<br/><pre>Field name: field6<br/><pre>Field name: field7<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-49c07bee-ca52-4c28-80a1-95d2d15a5e03",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: flag<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8df97df9-4d0f-49b1-986e-7703433d5609",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username<br/>Validation regex: \"^[a-zA-Z0-9._-]{3,}$\"<br/>Validation length: MIN: 3 MAX: 30<br/>Example: \"John_Doe123\"<br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-6846a670-7c57-4371-b4a9-45988a3cb91f",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-81a93b90-bbdd-40ec-85c6-692e8bcf5e2c",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-f2843873-6da4-4644-8ee7-e0e71bc4e3df",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username_login<br/><pre>Field name: password_login<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-1d5f581e-492d-48cf-97cf-6ec5bf392e3c",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: link<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-917a718f-258b-493b-ad17-a6b9ca38dbda",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: email<br/>Validation regex: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z](2, 6)$\"<br/>Validation length: MIN: 6 MAX: 254<br/>Example: \"john_doe@example.com\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e0c89822-ef6c-46d8-96bb-a3f96fce9e85",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-dbfdae7c-3f47-4d5b-9f55-d0b346add888",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-58c14d8b-f254-4c84-9652-37f9efcea86e",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-939db1e7-64ca-4283-a0b8-5363614e2bb8",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-1f47de54-f026-41cc-bd9d-bf0cc8b582a3",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: successMessage<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8b719cbb-c066-49c3-b12b-fd1ad2f5833e",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: network_num<br/><pre>Field name: number<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8254671e-48f2-4985-8567-51f01678a0bb",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: networkNum<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-bbcd70a2-0f03-41c0-9396-d1a797cd2311",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-7c2cc8e3-b19d-49d7-8654-0344ad116aa1",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: answer<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-5fa56746-d241-4c32-8379-7563a591cdba",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: checkoutCode<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-b4952d8f-712e-443a-8363-62768dd84d30",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-1df47463-02c7-42d0-9760-3279c1f5c7bd",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-5e8f2c7d-715c-4c3b-9ee7-f9485dda4ac5",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: code<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-aa86a5c6-5bde-468f-a8b4-7ca2da714921",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-d88a06bd-4dfb-4e76-b450-999ababf4866",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-6f5ef8f6-a79c-4f84-814c-d069981c499a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: answer_user<br/><pre>Field name: answer_pwd<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-bd0db154-6ac2-46ca-bd06-a5df1164ee16",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-20f29396-91e1-4440-8bbe-268b113fbba7",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-96a74a27-441e-4d5e-9378-ac14631ce5e6",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-efe7292c-e02e-44e7-a970-1680598c538c",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-c9feb8ce-38ec-4f28-9083-329a96d68ddf",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-a254b907-7a0d-4259-837e-94b840696b65",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: answer_pwd1<br/><pre>Field name: answer_pwd2<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-4609d161-7560-481d-beca-fd9b82459c02",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e7e7859c-9494-4201-b7db-4fea2dbf178f",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-83cee292-af9e-489f-a651-fa08ec232449",
              "shortDescription": {
                "text": "Unsafe hash equals."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#UNSAFE_HASH_EQUALS",
              "relationships": [
                {
                  "target": {
                    "id": "203",
                    "guid": "87991d23-2fc3-5120-b88b-2a9757717e43",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "UNSAFE_HASH_EQUALS"
                ]
              }
            },
            {
              "id": "glog-8b754e17-95f2-444e-986a-12507ff336eb",
              "shortDescription": {
                "text": "Unsafe hash equals."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#UNSAFE_HASH_EQUALS",
              "relationships": [
                {
                  "target": {
                    "id": "203",
                    "guid": "87991d23-2fc3-5120-b88b-2a9757717e43",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "UNSAFE_HASH_EQUALS"
                ]
              }
            },
            {
              "id": "glog-e26ba4d1-634e-40bb-ab3e-2245119a1cf2",
              "shortDescription": {
                "text": "MD2, MD4 and MD5 are weak hash functions."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#WEAK_MESSAGE_DIGEST_MD5",
              "relationships": [
                {
                  "target": {
                    "id": "328",
                    "guid": "dc1e99c1-c57b-5af0-85a4-9ad3bfac9c82",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "WEAK_MESSAGE_DIGEST_MD5"
                ]
              }
            },
            {
              "id": "glog-7f92842f-4fea-4a6b-bb20-89fee8836245",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-d6c8d16a-7b1d-4dc5-a412-81bce79fefea",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: secretFileName<br/><pre>Field name: secretText<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-74f47e5d-c7c9-4d69-8dfe-d5005cf9c286",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-11ed5050-2467-494f-a622-2e091a6fdf29",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-5da0318c-054b-41fa-abfb-e341ade4c28c",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: modulus<br/><pre>Field name: signature<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-33556e05-549d-4870-b5de-06402ef86fbe",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-c0bf5665-c379-4384-a14b-8fa3f6e3bcac",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: answer_pwd1<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-4cf5d6f8-513c-45a4-ab98-8d7a7406dfe9",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8058149d-a27e-47ea-b611-ca3f794e1c16",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation (Output Encoding):</b><br/><pre>try<br/></pre></p></br><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-a610c9c8-66f4-4da5-b69f-93bf32d3ea8a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: flag<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-532aba09-2b4e-4f3c-bf6e-467321c7786b",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-717f84f8-c17a-4adc-9d11-ace7b4b59f50",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-f5e3dc33-dd17-430d-82a1-22211f3d1f93",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-8487de71-d8f3-4a5d-b15d-503bb162d94c",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-d5851976-3e41-4f11-b5d2-914244cd84c9",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-0207a779-8e9a-47aa-9682-6df449ee0ade",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-3f96960b-6597-499b-8574-25ddfecdd9a3",
              "shortDescription": {
                "text": "Object deserialization is used in {1}."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#OBJECT_DESERIALIZATION",
              "relationships": [
                {
                  "target": {
                    "id": "502",
                    "guid": "ff25cc2c-fffa-57bc-8f05-4b360dd88816",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "OBJECT_DESERIALIZATION"
                ]
              }
            },
            {
              "id": "glog-c07ec470-b179-4542-b459-893ae2bc5f01",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: token<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-86323406-8214-4bc2-939a-6c10bf957dba",
              "shortDescription": {
                "text": "Object deserialization is used in {1}."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#OBJECT_DESERIALIZATION",
              "relationships": [
                {
                  "target": {
                    "id": "502",
                    "guid": "ff25cc2c-fffa-57bc-8f05-4b360dd88816",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "OBJECT_DESERIALIZATION"
                ]
              }
            },
            {
              "id": "glog-23fc0f21-ec9c-4b0d-8fa2-79708827f6d9",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-309435c5-1134-4b00-b4b5-9d7c1ee53853",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-a6c6b5d8-080e-4152-8f07-3a40b9b410ce",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-d6f7d819-7fb4-48fe-a813-5e1e75313f0a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: QTY<br/><pre>Field name: Total<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-2af1fecc-ff3c-47ec-a1e4-48ec40a1f973",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: person<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-1a1e6f13-19ed-4acb-bb5a-ee2d4ada6ad0",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-06475e4d-1632-4713-abe2-5a669ca87d37",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-ab0ec048-5e1c-4d3e-b7b4-908d732229c2",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: answer<br/><pre>Field name: magic_answer<br/><pre>Field name: magic_num<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-0bb8d8dd-9d05-4b79-9ea5-9e4224ef91f2",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-60097a09-6a33-4869-a6ba-22e973d116eb",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-eb3169f5-becb-44ea-b0b3-e35d225cabc7",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-83d55151-de8c-4a49-986d-facc9c0cd6ef",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-08c514f4-74ac-41ee-9306-dc3ff329d44a",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-196fed9c-a33c-47cd-a046-acdf20a6f753",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-8d78afdc-31a0-43ca-a19e-eaeda1e1791c",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-7c1422e4-264c-4bf9-8928-9ca7c479ee3d",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: attributes<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-b5187994-ce0b-403d-870b-2fd6e59f39ce",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-70d32ac5-adca-46c0-8b1d-858e4660f6a2",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-ba5b8ece-ac49-4ab4-83f7-3c3c72d6f43c",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-35dd719d-1bff-4e62-9bac-c4cafef35e92",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userId<br/><pre>Field name: org.owasp.webgoat.lessons.idor.UserProfile.userId<br/><pre>Field name: org.owasp.webgoat.lessons.idor.UserProfile.name<br/>Validation regex: \"^[a-zA-Z\\s]+$\"<br/>Validation length: MIN: 2 MAX: 50<br/>Example: The regular expression \"^[a-zA-Z\\s]$\" requires a single character that is either a letter (uppercase or lowercase) or a whitespace. \n\nSo, a value that would satisfy this could be \"A\".<br/><pre>Field name: org.owasp.webgoat.lessons.idor.UserProfile.color<br/><pre>Field name: org.owasp.webgoat.lessons.idor.UserProfile.size<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-4ef279d4-93d7-4166-aa29-7feb55f89958",
              "shortDescription": {
                "text": "Hard coded password."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#HARD_CODE_PASSWORD",
              "relationships": [
                {
                  "target": {
                    "id": "259",
                    "guid": "50b06d54-751a-5af0-9a8c-5ba16677987d",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "HARD_CODE_PASSWORD"
                ]
              }
            },
            {
              "id": "glog-1b511480-ed4d-40ac-957b-4bc5a4e07c89",
              "shortDescription": {
                "text": "Hard coded password."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#HARD_CODE_PASSWORD",
              "relationships": [
                {
                  "target": {
                    "id": "259",
                    "guid": "50b06d54-751a-5af0-9a8c-5ba16677987d",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "HARD_CODE_PASSWORD"
                ]
              }
            },
            {
              "id": "glog-90d5d927-bd6e-44d6-9a1c-18d795a5ef4d",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username<br/>Validation regex: \"^[a-zA-Z0-9._-]{3,}$\"<br/>Validation length: MIN: 3 MAX: 30<br/>Example: \"John_Doe123\"<br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-b4c36c55-9256-452b-976d-8035eff84530",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userId<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-4e4329b3-c963-43bf-a833-4a43759375ce",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: url<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-cace8dcd-0893-4c1b-9939-7454eb625a32",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username<br/>Validation regex: \"^[a-zA-Z0-9._-]{3,}$\"<br/>Validation length: MIN: 3 MAX: 30<br/>Example: \"John_Doe123\"<br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-b21289bf-f829-4dca-9544-50973be5c262",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: user<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-572bcea9-da5b-4056-a61b-da665161e16a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e723defa-66c3-4115-bf1e-db11b21055c1",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-911b3bcb-fa65-4e63-8116-9d68ac8a9150",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-0d19f957-7237-496a-b98b-cb972149190f",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-2e3f29b1-47fb-4123-a824-da84882a496d",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-2671220f-a17a-4163-9b32-55f068712c8f",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-141b87bf-e87e-4049-b0e7-340e564cc3bb",
              "shortDescription": {
                "text": "Predictable pseudorandom number generator."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM",
              "relationships": [
                {
                  "target": {
                    "id": "330",
                    "guid": "80cf7ee1-5a29-5fb4-a2f1-701272abf9b7",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PREDICTABLE_RANDOM"
                ]
              }
            },
            {
              "id": "glog-9a1cf776-3135-4d74-8fb9-c0f9200f3e3f",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-3d01f48a-529c-4f27-aba8-497e56b45fae",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: token<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-cd8e1eb1-23ac-4176-881a-bd52a18900b4",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-b85ee79a-ff21-45f0-b8f4-7c82a881ce8c",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: user<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-923d6b8d-d173-406c-b245-e4a3abf533ce",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-95a8fb43-a73b-4103-adf9-ab8838347208",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-71c3af8b-5153-42f7-840b-4a31aa95fb7d",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: user<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e671180e-ce81-49f8-9d9f-7fca9ab33bc7",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: token<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-7a5267d4-de1a-40cd-b8ed-fd4fd48fae8a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: user<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-a7bd7122-888b-450b-9561-9b154f4aa23d",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: token<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-f1cf0ab6-fda1-485e-821e-640c922d9c8b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: param1<br/><pre>Field name: param2<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-3e39fdb4-e21e-4252-8e41-8e39107b40dd",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: user<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-a8facb0a-564b-4450-8637-12617f1f47a4",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username<br/>Validation regex: \"^[a-zA-Z0-9._-]{3,}$\"<br/>Validation length: MIN: 3 MAX: 30<br/>Example: \"John_Doe123\"<br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-5d1191e2-7c45-4121-9c1e-2ec2dc9fb33c",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username<br/>Validation regex: \"^[a-zA-Z0-9._-]{3,}$\"<br/>Validation length: MIN: 3 MAX: 30<br/>Example: \"John_Doe123\"<br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-40b1b5ad-19bb-41ef-bf8f-e0ef2135d682",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-0bde4e02-7329-4121-bcd6-abd14fafb18f",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: org.owasp.webgoat.lessons.missingac.User.username<br/>Validation regex: \"^[a-zA-Z0-9._-]{3,}$\"<br/>Validation length: MIN: 3 MAX: 30<br/>Example: \"John_Doe123\"<br/><pre>Field name: org.owasp.webgoat.lessons.missingac.User.password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-0b4cb521-57fd-4545-96be-c56eb2db9b50",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-7a6701b7-cf3d-49a2-b663-89e028a7ab59",
              "shortDescription": {
                "text": "Unsafe hash equals."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#UNSAFE_HASH_EQUALS",
              "relationships": [
                {
                  "target": {
                    "id": "203",
                    "guid": "87991d23-2fc3-5120-b88b-2a9757717e43",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "UNSAFE_HASH_EQUALS"
                ]
              }
            },
            {
              "id": "glog-ebc509c1-9a23-4f88-ae0c-40f9d13f236d",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-773131a6-5815-4d56-b507-55d2f5c358bd",
              "shortDescription": {
                "text": "Unsafe hash equals."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#UNSAFE_HASH_EQUALS",
              "relationships": [
                {
                  "target": {
                    "id": "203",
                    "guid": "87991d23-2fc3-5120-b88b-2a9757717e43",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "UNSAFE_HASH_EQUALS"
                ]
              }
            },
            {
              "id": "glog-06bc7793-84ec-4136-bb7a-9a318573e7cf",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-8edbfd08-8cb0-47d9-8472-420581c71b6b",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-9eabd325-dc0f-42f8-944f-c1f97ee534e6",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-17c66868-efa5-4ab5-a6f3-5ca7bae0d5cc",
              "shortDescription": {
                "text": "Hard coded password."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#HARD_CODE_PASSWORD",
              "relationships": [
                {
                  "target": {
                    "id": "259",
                    "guid": "50b06d54-751a-5af0-9a8c-5ba16677987d",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "HARD_CODE_PASSWORD"
                ]
              }
            },
            {
              "id": "glog-5b877e5d-c84b-4d21-9205-7708f0b083fc",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8e95e136-880f-419e-9674-613b1ef7f0b5",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/><pre>Field name: email<br/>Validation regex: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z](2, 6)$\"<br/>Validation length: MIN: 6 MAX: 254<br/>Example: \"john_doe@example.com\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-74e7f25d-e744-4d08-a6d5-def4c934316d",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: link<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-b385c875-fdff-44b9-b87d-9979b9308f6d",
              "shortDescription": {
                "text": "Spring File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_FILE_DISCLOSURE",
              "properties": {
                "tags": [
                  "SPRING_FILE_DISCLOSURE"
                ]
              }
            },
            {
              "id": "glog-7430c64a-6655-47fc-9ee3-abc4538f7690",
              "shortDescription": {
                "text": "Spring File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_FILE_DISCLOSURE",
              "properties": {
                "tags": [
                  "SPRING_FILE_DISCLOSURE"
                ]
              }
            },
            {
              "id": "glog-bad888cf-714f-4a53-841c-e2793ee61bb1",
              "shortDescription": {
                "text": "Spring File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_FILE_DISCLOSURE",
              "properties": {
                "tags": [
                  "SPRING_FILE_DISCLOSURE"
                ]
              }
            },
            {
              "id": "glog-c1a2bf02-cf1f-401e-bb5b-c0eff67e96d4",
              "shortDescription": {
                "text": "Spring File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_FILE_DISCLOSURE",
              "properties": {
                "tags": [
                  "SPRING_FILE_DISCLOSURE"
                ]
              }
            },
            {
              "id": "glog-aa38cb5b-fb3f-4224-b171-45e5a26d4d80",
              "shortDescription": {
                "text": "Spring File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_FILE_DISCLOSURE",
              "properties": {
                "tags": [
                  "SPRING_FILE_DISCLOSURE"
                ]
              }
            },
            {
              "id": "glog-8e941572-2f9a-40f6-9d0c-24f7201849ed",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: email<br/>Validation regex: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z](2, 6)$\"<br/>Validation length: MIN: 6 MAX: 254<br/>Example: \"john_doe@example.com\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-4331f113-65f8-4b0c-bca2-5a0b3802a3d0",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: question<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-54c3e45e-7b37-4376-86be-9ad22b303281",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: email<br/>Validation regex: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z](2, 6)$\"<br/>Validation length: MIN: 6 MAX: 254<br/>Example: \"john_doe@example.com\"<br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-7ea62967-4bec-48f6-8709-c43c7de58dc5",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: emailReset<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-81fa321a-5d5d-45eb-85ea-a7876dbdce15",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: fullName<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-55ccac66-58e9-4ad2-ab47-eff7db5488ba",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-e5a2ec55-e5e6-4c31-95ba-122e1ea9f1a6",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-add6ec14-5c02-4234-a031-6dc289ac1ca6",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-b40cfdf4-a4f2-4ab9-9a57-c7056270352e",
              "shortDescription": {
                "text": "FilenameUtils not filtering null bytes."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#WEAK_FILENAMEUTILS",
              "properties": {
                "tags": [
                  "WEAK_FILENAMEUTILS"
                ]
              }
            },
            {
              "id": "glog-a6a241c8-d03c-4e4c-9b09-3b6c892ff808",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: fullName<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8136f2dd-99d5-4ce7-bb99-2b9bd7c6d99b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-f4b34c14-bb22-4970-a15b-403c87c0e676",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-57c2d4ce-4d7b-48fb-b761-cf523fc6b21c",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-408c0fae-8e58-49a5-bbc7-cb8b591e8a2f",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-a3d80ad5-c130-41a8-947d-4385a39d8100",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-5573d75d-f6af-435c-a813-f72853400928",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: secret<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-bd5dc39f-4570-431f-8a1d-e4f49a391fa8",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-f29be878-02a0-407b-9cf1-a80df42d7bfd",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-8f1813a6-de64-4120-a235-a7565a108899",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-70875d98-c0b4-42c1-bd6d-c7354f4ccf2a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-dab39ec7-2a98-44fc-a5ee-c5acfc5fa7af",
              "shortDescription": {
                "text": "An unsafe string is potentially injected into an XML string."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#POTENTIAL_XML_INJECTION",
              "properties": {
                "tags": [
                  "POTENTIAL_XML_INJECTION"
                ]
              }
            },
            {
              "id": "glog-73a72c4e-d54e-4efb-b1fd-33129376e810",
              "shortDescription": {
                "text": "An unsafe string is potentially injected into an XML string."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#POTENTIAL_XML_INJECTION",
              "properties": {
                "tags": [
                  "POTENTIAL_XML_INJECTION"
                ]
              }
            },
            {
              "id": "glog-9685e70d-c019-4a91-b417-5ec5bbd23b80",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: password<br/>Validation regex: \"^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=]).{8,}$\"<br/>Validation length: MIN: 8 MAX: 128<br/>Example: \"Password123@\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-c102a0df-d17e-4713-b46b-004dd5faaf8b",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-40c63891-bb12-4fca-a6cd-ec649b94a606",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-15713625-c51b-4c3f-82e8-0f97bbebfddd",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-67d8970c-4cb1-45b3-a590-8bb295b1ce8b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8090aef7-322c-485f-a7cd-65e71efa14b8",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username_reg<br/><pre>Field name: email_reg<br/><pre>Field name: password_reg<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-ce3ed271-9c5f-4014-85ed-e36336093585",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: username_login<br/><pre>Field name: password_login<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-cc447bb4-b34e-49dc-9854-81cdd6d090f7",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userId<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-32f15369-0a4a-46e0-b8d7-1f6671615608",
              "shortDescription": {
                "text": "Information Exposure Through An Error Message."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE",
              "relationships": [
                {
                  "target": {
                    "id": "209",
                    "guid": "f4809885-c9d6-5931-8bb1-50534e74f6cc",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE"
                ]
              }
            },
            {
              "id": "glog-4b5037b0-e31c-492f-b200-9126b1c60fe1",
              "shortDescription": {
                "text": "Information Exposure Through An Error Message."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE",
              "relationships": [
                {
                  "target": {
                    "id": "209",
                    "guid": "f4809885-c9d6-5931-8bb1-50534e74f6cc",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE"
                ]
              }
            },
            {
              "id": "glog-57991223-f1d8-4609-8aa5-57208d04ff2c",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userid_6b<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-9bcc07f2-0556-4abc-b955-44185cbdc22a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-f1445048-5825-4f1c-b16c-66af01aa7865",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: action_string<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-f7128cb6-f933-4db5-b714-77ab6a4ace05",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: query<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e862e610-86f1-47c2-91c5-5a081c4e2ba2",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: query<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-c916c3c3-c28f-4c65-b1db-490b32c25141",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: query<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-ffe22cb8-92a0-42d6-891a-bf95f9130652",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-cecf7dda-bd20-4799-b333-ee1d033b3359",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: account<br/><pre>Field name: operator<br/><pre>Field name: injection<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-1048cdb7-84a9-4cdf-b0e2-1e14a8a7efec",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userid<br/><pre>Field name: login_count<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-3cccd12d-a218-4d84-9de4-6b141db8d557",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: name<br/>Validation regex: \"^[a-zA-Z\\s]+$\"<br/>Validation length: MIN: 2 MAX: 50<br/>Example: The regular expression \"^[a-zA-Z\\s]$\" requires a single character that is either a letter (uppercase or lowercase) or a whitespace. \n\nSo, a value that would satisfy this could be \"A\".<br/><pre>Field name: auth_tan<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-6de7d08f-f430-4937-917e-8ee98f70b264",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: name<br/>Validation regex: \"^[a-zA-Z\\s]+$\"<br/>Validation length: MIN: 2 MAX: 50<br/>Example: The regular expression \"^[a-zA-Z\\s]$\" requires a single character that is either a letter (uppercase or lowercase) or a whitespace. \n\nSo, a value that would satisfy this could be \"A\".<br/><pre>Field name: auth_tan<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-11c9e181-ae7c-4f6b-b360-3fad5762903b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: column<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-2412d64c-d451-40de-9b74-574ccf37b0ef",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: field1<br/><pre>Field name: field2<br/><pre>Field name: field3<br/><pre>Field name: field4<br/><pre>Field name: field5<br/><pre>Field name: field6<br/><pre>Field name: field7<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-8b014b1a-ed68-4925-a530-5e1d20d5afb8",
              "shortDescription": {
                "text": "Information Exposure Through An Error Message."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE",
              "relationships": [
                {
                  "target": {
                    "id": "209",
                    "guid": "f4809885-c9d6-5931-8bb1-50534e74f6cc",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE"
                ]
              }
            },
            {
              "id": "glog-55ffde72-cceb-431e-b3cb-2fc0a19f32cc",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: editor<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-0d8132c5-b88d-47a8-bd49-c17e67c20b96",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: ip<br/>Validation regex: \"^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\"<br/>Validation length: MIN: 7 MAX: 15<br/>Example: This regular expression is used to validate IP addresses. An example of a value that would satisfy this regular expression is \"192.168.1.1\".<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-95af7f50-b4e8-4d73-8695-1d21faba3271",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userId<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-802d3257-b498-49ed-a656-6398828a62ca",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: userId<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-d6781ffb-b009-4ec6-8004-181914073199",
              "shortDescription": {
                "text": "Information Exposure Through An Error Message."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE",
              "relationships": [
                {
                  "target": {
                    "id": "209",
                    "guid": "f4809885-c9d6-5931-8bb1-50534e74f6cc",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE"
                ]
              }
            },
            {
              "id": "glog-e1526996-d751-40e1-b9de-59438c4cfc23",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: url<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-3bed1161-3139-4221-b86d-0dcbab4803b5",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: url<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-f60fdaa9-3e6a-4017-acda-6520af85c5c0",
              "shortDescription": {
                "text": "URLConnection Server-Side Request Forgery (SSRF) and File Disclosure."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#URLCONNECTION_SSRF_FD",
              "relationships": [
                {
                  "target": {
                    "id": "918",
                    "guid": "5bb88194-5222-563c-b8e6-b0b769ed3c9a",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "URLCONNECTION_SSRF_FD"
                ]
              }
            },
            {
              "id": "glog-47ed5401-8d48-4052-af15-24dcab0513ae",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: payload<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-ecd6997a-898d-454a-bb6b-c8e5fd511385",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e2673d7d-bb44-4c20-8b4a-90b8de967547",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e459b6b3-15b1-401b-9ded-72f63c00a9c6",
              "shortDescription": {
                "text": "Improper handling of Unicode transformations."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#IMPROPER_UNICODE",
              "relationships": [
                {
                  "target": {
                    "id": "176",
                    "guid": "caae0840-1583-5ad6-9822-3d01b325b926",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "IMPROPER_UNICODE"
                ]
              }
            },
            {
              "id": "glog-97cf3af1-c1cd-4763-90af-44c108a2ed12",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: uniqueCode<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-edab9c1d-a5d3-435c-aca7-053fe9467882",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: email<br/>Validation regex: \"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z](2, 6)$\"<br/>Validation length: MIN: 6 MAX: 254<br/>Example: \"john_doe@example.com\"<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-45c5cd07-c555-47ec-9d12-1103011ce489",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: checkboxValue<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-e837f14a-1fe9-4710-9852-214f908bb0c3",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: editor<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-834246e7-b36a-4546-bbe7-273de631750b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: editor2<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-4d1ede83-6a67-458b-886a-1b9250c56f94",
              "shortDescription": {
                "text": "An unsafe string is potentially injected into an XML string."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#POTENTIAL_XML_INJECTION",
              "properties": {
                "tags": [
                  "POTENTIAL_XML_INJECTION"
                ]
              }
            },
            {
              "id": "glog-c5f2020f-b0e2-44e9-8803-9d4ce7aa1a28",
              "shortDescription": {
                "text": "An unsafe string is potentially injected into an XML string."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#POTENTIAL_XML_INJECTION",
              "properties": {
                "tags": [
                  "POTENTIAL_XML_INJECTION"
                ]
              }
            },
            {
              "id": "glog-d73bfcce-ec1b-4d4c-ba2c-25e75b0d5c04",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: field1<br/><pre>Field name: field2<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-011f3809-8ae0-431a-9f53-da4c5cb2e8ac",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: DOMTestRoute<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-b1cd27cf-2788-484f-a5fd-d9b8e3dd2bdd",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-58e40347-90ab-4eaa-9a45-2df859f0dac9",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-a41c62d3-8270-4331-8579-c3dbb61d007a",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: successMessage<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-67db0c8f-5c4d-40b3-a665-ad192c3c108b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: successMessage<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-37f98a2c-ce8f-4f5d-bce7-e50e0f6dd92f",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation (Output Encoding):</b><br/><pre>Comment comment = parseJson(org.owasp.encoder.Encode.forJava(commentStr))<br/></pre></p></br><p><b>In Context Remediation:</b><br/><pre>Field name: org.owasp.webgoat.lessons.xss.Comment.user<br/><pre>Field name: org.owasp.webgoat.lessons.xss.Comment.dateTime<br/><pre>Field name: org.owasp.webgoat.lessons.xss.Comment.text<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-33f110d9-daa2-4580-9a1f-9de645357bcb",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-d997c0f6-f7fe-4322-ab6b-cd1053854a62",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation (Output Encoding):</b><br/><pre>if (org.owasp.encoder.Encode.forJava(commentStr).contains(fileContentsForUser))<br/>try<br/></pre></p></br><p><b>In Context Remediation:</b><br/><pre>Field name: org.owasp.webgoat.lessons.xxe.Comment.user<br/><pre>Field name: org.owasp.webgoat.lessons.xxe.Comment.dateTime<br/><pre>Field name: org.owasp.webgoat.lessons.xxe.Comment.text<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-538dff2a-bc77-4f25-a03a-22b1d4fe3021",
              "shortDescription": {
                "text": "XML parsing vulnerable to XXE (XMLStreamReader)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#XXE_XMLSTREAMREADER",
              "relationships": [
                {
                  "target": {
                    "id": "611",
                    "guid": "b7383f8c-a52b-52c9-b7d1-95a3c511d9da",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "XXE_XMLSTREAMREADER"
                ]
              }
            },
            {
              "id": "glog-c38c1a78-1941-4b2a-9ec9-09c84edb326f",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation (Output Encoding):</b><br/><pre>if (APPLICATION_JSON_VALUE.equals(contentType))<br/>if (null != contentType && contentType.contains(MediaType.APPLICATION_XML_VALUE))<br/></pre></p></br><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-d51c5a24-1bc3-422c-a2ce-52d7495aa295",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-022b25be-09de-4018-a6e6-5004f1af0e89",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-fb3b9e8b-47f8-4836-9af6-395d0af4ed35",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-03b35a0f-6f0f-4bae-a811-950a4e0259fa",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation (Output Encoding):</b><br/><pre>try<br/></pre></p></br><p><b>In Context Remediation:</b><br/><pre>Field name: org.owasp.webgoat.lessons.xxe.Comment.user<br/><pre>Field name: org.owasp.webgoat.lessons.xxe.Comment.dateTime<br/><pre>Field name: org.owasp.webgoat.lessons.xxe.Comment.text<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-fa6a679f-9fde-427b-aa3a-f05f860b790e",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-ab9179ff-2a86-47d8-b176-17172fba59b1",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-d718463c-da18-43ad-941a-e56934d85c6e",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-03a97f18-b6eb-4c2f-9b83-7f441219cc6c",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-a42cfa70-cdbf-4a48-95b4-05240be0f0a1",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-2cdc8939-33f4-4823-8158-f6ede0b2f1f4",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-ae02772f-9ef1-4e7f-b6e4-d3e9b7f4d0ed",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-7a3957ce-d2cb-42dd-b382-b4fb932950f3",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-769cb787-b7f0-45ec-bcbc-5224679111c8",
              "shortDescription": {
                "text": "Potential Path Traversal (file read)."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#PATH_TRAVERSAL_IN",
              "relationships": [
                {
                  "target": {
                    "id": "22",
                    "guid": "19cf96fc-1234-5a3d-8e5d-21b225b7d3e8",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "PATH_TRAVERSAL_IN"
                ]
              }
            },
            {
              "id": "glog-e871eb8e-e7e7-48e8-93a1-3364202e4214",
              "shortDescription": {
                "text": "Spring CSRF protection disabled."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_PROTECTION_DISABLED",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_PROTECTION_DISABLED"
                ]
              }
            },
            {
              "id": "glog-db909ffe-d176-44e1-b430-90ce3bb645c7",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-14751112-72a9-4d3c-b372-d47137483b2b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-845063a9-043f-4613-9a88-9246a664ef8b",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-d985b90c-fbc3-4a96-8a22-4674b20aed7e",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>In Context Remediation:</b><br/><pre>Field name: org.owasp.webgoat.webwolf.mailbox.Email.contents<br/><pre>Field name: org.owasp.webgoat.webwolf.mailbox.Email.sender<br/><pre>Field name: org.owasp.webgoat.webwolf.mailbox.Email.title<br/><pre>Field name: org.owasp.webgoat.webwolf.mailbox.Email.recipient<br/></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-02ad112e-f583-4c83-b478-3201fd360adc",
              "shortDescription": {
                "text": "Spring CSRF unrestricted RequestMapping."
              },
              "messageStrings": {},
              "helpUri": "https://find-sec-bugs.github.io/bugs.htm#SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING",
              "relationships": [
                {
                  "target": {
                    "id": "352",
                    "guid": "4cccead0-b8dc-5b81-98f4-9b2b99290363",
                    "toolComponent": {
                      "name": "CWE",
                      "guid": "b8c54a32-de19-51d2-9a08-f0abfbaa7310"
                    }
                  },
                  "kinds": [
                    "superset"
                  ]
                }
              ],
              "properties": {
                "tags": [
                  "SPRING_CSRF_UNRESTRICTED_REQUEST_MAPPING"
                ]
              }
            },
            {
              "id": "glog-f94cd625-5e22-4f12-8ccd-6b34c6ed1000",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            },
            {
              "id": "glog-67f05f6b-f2b7-4ec1-bab7-47bfc6f31795",
              "help": {
                "text": "",
                "markdown": "<p>This class is a Spring Controller. All methods annotated with <code>RequestMapping</code> (as well as its shortcut annotations <code>GetMapping</code>, <code>PostMapping</code>, <code>PutMapping</code>, <code>DeleteMapping</code>, and <code>PatchMapping</code>) are reachable remotely. This class should be analyzed to make sure that remotely exposed methods are safe to expose to potential attackers.</p><p>Perform input validation to ensure only properly formed data is entering the workflow in an information system, preventing malformed data from persisting in the database and triggering malfunction of various downstream components. Input validation should happen as early as possible in the data flow, preferably as soon as the data is received from the external party.</p><p>Data from all potentially untrusted sources should be subject to input validation, including not only Internet-facing web clients but also backend feeds over extranets, from suppliers, partners, vendors or regulators, each of which may be compromised on their own and start sending malformed data.</p><p><b>Solution (Bean Validation):</b><br/><pre>public class ExampleDto implements Serializable {<br/>    @Pattern(regexp = \"white list regular expression\")<br/>    @Size(min = minimum field size, max = maximum field size)<br/>    private String fieldName;<br/>}</pre></p><br/><p><b>Solution (Validation Service or Method):</b><br/><pre>public boolean validateData(string data, String whiteListRegex) {<br/>    Pattern p = Pattern.compile(whiteListRegex);<br/>    Matcher m = p.matcher(data);<br/>    return m.matches();<br/>}</pre></p><br/><p><b>References</b><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/REST_Security_Cheat_Sheet.html\">OWASP: REST Security Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html\">OWASP: Input Validation Cheat Sheet</a><br/><a href=\"https://cheatsheetseries.owasp.org/cheatsheets/Bean_Validation_Cheat_Sheet.html\">OWASP: Bean Validation Cheat Sheet</a><br/></p>"
              },
              "properties": {
                "tags": [
                  "SPRING_ENDPOINT"
                ]
              }
            }
          ],
          "language": "en-US",
          "contents": [
            "localizedData",
            "nonLocalizedData"
          ],
          "isComprehensive": false
        }
      },
      "language": "en-US",
      "results": [
        {
          "ruleId": "glog-d72cef95-d463-4c78-9fa7-a7b7d67066af",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Command Injection",
            "id": "default",
            "arguments": [
              "java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                },
                "region": {
                  "startLine": 65
                }
              },
              "logicalLocations": [
                {
                  "name": "readObject(ObjectInputStream)",
                  "fullyQualifiedName": "org.dummy.insecure.framework.VulnerableTaskHolder.readObject(ObjectInputStream)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-41a6929f-b725-4baa-a319-1622ebfd00d4",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "This class could be used as deserialization gadget",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/dummy/insecure/framework/VulnerableTaskHolder.java"
                },
                "region": {
                  "startLine": 11,
                  "endLine": 75
                }
              },
              "logicalLocations": [
                {
                  "name": "VulnerableTaskHolder",
                  "fullyQualifiedName": "org.dummy.insecure.framework.VulnerableTaskHolder",
                  "kind": "type"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-6b2dd09d-2c48-4f40-be9d-4ebafa0f5509",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/HammerHead.java"
                },
                "region": {
                  "startLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "attack()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.HammerHead.attack()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-41ac0734-badc-4c0d-ae3e-22f07932daff",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/HammerHead.java"
                },
                "region": {
                  "startLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "attack()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.HammerHead.attack()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-64a5ee70-2338-443a-82fa-9c1d846ae132",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/WebGoat.java"
                },
                "region": {
                  "startLine": 62
                }
              },
              "logicalLocations": [
                {
                  "name": "pluginTargetDirectory(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.WebGoat.pluginTargetDirectory(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ce4269b2-0ae2-4b60-97d2-5409c8a4f03d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF protection disabled",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 86
                }
              },
              "logicalLocations": [
                {
                  "name": "lambda$filterChain$4(CsrfConfigurer)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.WebSecurityConfig.lambda$filterChain$4(CsrfConfigurer)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-956627dd-f931-4ea5-b9ff-fc3edbbf6f1b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/WebWolfRedirect.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "openWebWolf()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.WebWolfRedirect.openWebWolf()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-9244df5f-8504-415f-b2ea-99598717581f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/controller/StartLesson.java"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 88
                }
              },
              "logicalLocations": [
                {
                  "name": "lessonPage(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.controller.StartLesson.lessonPage(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-858307b2-1334-428e-8c75-94e95beb476e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/controller/StartLesson.java"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 68
                }
              },
              "logicalLocations": [
                {
                  "name": "start()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.controller.StartLesson.start()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-385fda58-a1db-4e0b-bd10-969c497d2b15",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.container.controller.StartLesson"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/controller/StartLesson.java"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 88
                }
              },
              "logicalLocations": [
                {
                  "name": "lessonPage(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.controller.StartLesson.lessonPage(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-59e2217a-b9b5-4a4f-9074-da6d581dbaa3",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.container.controller.Welcome"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/controller/Welcome.java"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 69
                }
              },
              "logicalLocations": [
                {
                  "name": "welcome(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.controller.Welcome.welcome(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d16bf7b2-e392-4545-b774-8a58aa108876",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Format String Manipulation",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/lessons/LessonScanner.java"
                },
                "region": {
                  "startLine": 40
                }
              },
              "logicalLocations": [
                {
                  "name": "lambda$applyPattern$0(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.lessons.LessonScanner.lambda$applyPattern$0(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-6882b9ef-f3cd-4a3c-96ec-bb440c8ad5c4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 68
                }
              },
              "logicalLocations": [
                {
                  "name": "checkDebuggingStatus()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.LabelDebugService.checkDebuggingStatus()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-3f784fcb-bdb9-4265-9b34-470d2427322b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/LabelDebugService.java"
                },
                "region": {
                  "startLine": 83,
                  "endLine": 86
                }
              },
              "logicalLocations": [
                {
                  "name": "setDebuggingStatus(Boolean)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.LabelDebugService.setDebuggingStatus(Boolean)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-5b13133f-471f-4511-868d-d137739dfa0f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/LessonInfoService.java"
                },
                "region": {
                  "startLine": 30,
                  "endLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "getLessonInfo()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.LessonInfoService.getLessonInfo()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-2afadd2b-50c8-447e-bcc1-ae416f0fdc2d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/LessonMenuService.java"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 108
                }
              },
              "logicalLocations": [
                {
                  "name": "showLeftNav()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.LessonMenuService.showLeftNav()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b60e4a14-d2bc-4cb6-a43b-8cc6c429f446",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.container.service.LessonMenuService"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/LessonMenuService.java"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 108
                }
              },
              "logicalLocations": [
                {
                  "name": "showLeftNav()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.LessonMenuService.showLeftNav()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-49cd1747-08eb-4050-b3b7-c9181dc3bf7c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/LessonProgressService.java"
                },
                "region": {
                  "startLine": 35,
                  "endLine": 44
                }
              },
              "logicalLocations": [
                {
                  "name": "lessonOverview()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.LessonProgressService.lessonOverview()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-93c060e3-42c8-4a42-8095-1fc526c654bb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/LessonTitleService.java"
                },
                "region": {
                  "startLine": 31,
                  "endLine": 32
                }
              },
              "logicalLocations": [
                {
                  "name": "showPlan()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.LessonTitleService.showPlan()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ce911763-f3ea-457e-ab1d-5ffcc294ac89",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/RestartLessonService.java"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 67
                }
              },
              "logicalLocations": [
                {
                  "name": "restartLesson()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.RestartLessonService.restartLesson()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-69da0966-9315-451f-a2a4-f9bda3aa250b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/service/SessionService.java"
                },
                "region": {
                  "startLine": 27,
                  "endLine": 31
                }
              },
              "logicalLocations": [
                {
                  "name": "applySecurity()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.service.SessionService.applySecurity()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-732061c1-4fcb-40d1-8740-84e995589bb6",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.container.users.RegistrationController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 47
                }
              },
              "logicalLocations": [
                {
                  "name": "registration(UserForm, BindingResult, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.users.RegistrationController.registration(UserForm, BindingResult, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f6d5f4e5-c3eb-4ef3-9083-ce7e41318b79",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.container.users.RegistrationController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "registrationOAUTH(Authentication, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.users.RegistrationController.registrationOAUTH(Authentication, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-45a694a4-d9bb-4e51-a473-84bd15f04f12",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.container.users.RegistrationController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/users/RegistrationController.java"
                },
                "region": {
                  "startLine": 30
                }
              },
              "logicalLocations": [
                {
                  "name": "showForm(UserForm)",
                  "fullyQualifiedName": "org.owasp.webgoat.container.users.RegistrationController.showForm(UserForm)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d062a9a7-ab9e-46e4-ae9f-84ce4977ed24",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.container.users.Scoreboard"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/container/users/Scoreboard.java"
                },
                "region": {
                  "startLine": 38
                }
              },
              "logicalLocations": [
                {
                  "name": "getRankings()",
                  "fullyQualifiedName": "org.owasp.webgoat.container.users.Scoreboard.getRankings()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-68064fe4-a091-405f-a685-7faf97c449de",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.authbypass.VerifyAccount"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/authbypass/VerifyAccount.java"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 78
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.authbypass.VerifyAccount.completed(String, String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-74f4f163-0841-4f5d-aef4-d726b60d4c9a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.bypassrestrictions.BypassRestrictionsFieldRestrictions"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictionsFieldRestrictions.java"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 58
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, String, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.bypassrestrictions.BypassRestrictionsFieldRestrictions.completed(String, String, String, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-433504e6-f2bc-4dfa-af45-1bc778304e0f",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.bypassrestrictions.BypassRestrictionsFrontendValidation"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/bypassrestrictions/BypassRestrictionsFrontendValidation.java"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 77
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, String, String, String, String, String, Integer)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.bypassrestrictions.BypassRestrictionsFrontendValidation.completed(String, String, String, String, String, String, String, Integer)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-49c07bee-ca52-4c28-80a1-95d2d15a5e03",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.challenges.FlagController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/FlagController.java"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 49
                }
              },
              "logicalLocations": [
                {
                  "name": "postFlag(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.FlagController.postFlag(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8df97df9-4d0f-49b1-986e-7703433d5609",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.challenges.challenge1.Assignment1"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/Assignment1.java"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 64
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge1.Assignment1.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-6846a670-7c57-4371-b4a9-45988a3cb91f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                },
                "region": {
                  "startLine": 17
                }
              },
              "logicalLocations": [
                {
                  "name": "<static initializer for ImageServlet>()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge1.ImageServlet.<static initializer for ImageServlet>()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-81a93b90-bbdd-40ec-85c6-692e8bcf5e2c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge1/ImageServlet.java"
                },
                "region": {
                  "startLine": 25,
                  "endLine": 37
                }
              },
              "logicalLocations": [
                {
                  "name": "logo()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge1.ImageServlet.logo()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f2843873-6da4-4644-8ee7-e0e71bc4e3df",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.challenges.challenge5.Assignment5"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge5/Assignment5.java"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 57
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge5.Assignment5.login(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-1d5f581e-492d-48cf-97cf-6ec5bf392e3c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.challenges.challenge7.Assignment7"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                },
                "region": {
                  "startLine": 60,
                  "endLine": 68
                }
              },
              "logicalLocations": [
                {
                  "name": "resetPassword(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge7.Assignment7.resetPassword(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-917a718f-258b-493b-ad17-a6b9ca38dbda",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.challenges.challenge7.Assignment7"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/Assignment7.java"
                },
                "region": {
                  "startLine": 76,
                  "endLine": 95
                }
              },
              "logicalLocations": [
                {
                  "name": "sendPasswordResetLink(String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge7.Assignment7.sendPasswordResetLink(String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e0c89822-ef6c-46d8-96bb-a3f96fce9e85",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java"
                },
                "region": {
                  "startLine": 49
                }
              },
              "logicalLocations": [
                {
                  "name": "main(String[])",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge7.MD5.main(String[])",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-dbfdae7c-3f47-4d5b-9f55-d0b346add888",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                },
                "region": {
                  "startLine": 15
                }
              },
              "logicalLocations": [
                {
                  "name": "createPasswordReset(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge7.PasswordResetLink.createPasswordReset(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-58c14d8b-f254-4c84-9652-37f9efcea86e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java"
                },
                "region": {
                  "startLine": 14
                }
              },
              "logicalLocations": [
                {
                  "name": "createPasswordReset(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge7.PasswordResetLink.createPasswordReset(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-939db1e7-64ca-4283-a0b8-5363614e2bb8",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.challenges.challenge8.Assignment8"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge8/Assignment8.java"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 49
                }
              },
              "logicalLocations": [
                {
                  "name": "vote(int, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.challenges.challenge8.Assignment8.vote(int, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-1f47de54-f026-41cc-bd9d-bf0cc8b582a3",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.chromedevtools.NetworkDummy"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/chromedevtools/NetworkDummy.java"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 51
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.chromedevtools.NetworkDummy.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8b719cbb-c066-49c3-b12b-fd1ad2f5833e",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.chromedevtools.NetworkLesson"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/chromedevtools/NetworkLesson.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.chromedevtools.NetworkLesson.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8254671e-48f2-4985-8567-51f01678a0bb",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.chromedevtools.NetworkLesson"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/chromedevtools/NetworkLesson.java"
                },
                "region": {
                  "startLine": 60
                }
              },
              "logicalLocations": [
                {
                  "name": "ok(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.chromedevtools.NetworkLesson.ok(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-bbcd70a2-0f03-41c0-9396-d1a797cd2311",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cia.CIAQuiz"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cia/CIAQuiz.java"
                },
                "region": {
                  "startLine": 24,
                  "endLine": 44
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String[], String[], String[], String[])",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cia.CIAQuiz.completed(String[], String[], String[], String[])",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7c2cc8e3-b19d-49d7-8654-0344ad116aa1",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.clientsidefiltering.ClientSideFilteringAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFilteringAssignment.java"
                },
                "region": {
                  "startLine": 45
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.clientsidefiltering.ClientSideFilteringAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-5fa56746-d241-4c32-8379-7563a591cdba",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.clientsidefiltering.ClientSideFilteringFreeAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ClientSideFilteringFreeAssignment.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.clientsidefiltering.ClientSideFilteringFreeAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b4952d8f-712e-443a-8363-62768dd84d30",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"
                },
                "region": {
                  "startLine": 60
                }
              },
              "logicalLocations": [
                {
                  "name": "copyFiles()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.clientsidefiltering.Salaries.copyFiles()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-1df47463-02c7-42d0-9760-3279c1f5c7bd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/Salaries.java"
                },
                "region": {
                  "startLine": 77
                }
              },
              "logicalLocations": [
                {
                  "name": "invoke()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.clientsidefiltering.Salaries.invoke()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-5e8f2c7d-715c-4c3b-9ee7-f9485dda4ac5",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.clientsidefiltering.ShopEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/clientsidefiltering/ShopEndpoint.java"
                },
                "region": {
                  "startLine": 73,
                  "endLine": 76
                }
              },
              "logicalLocations": [
                {
                  "name": "getDiscountCode(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.clientsidefiltering.ShopEndpoint.getDiscountCode(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-aa86a5c6-5bde-468f-a8b4-7ca2da714921",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/CryptoUtil.java"
                },
                "region": {
                  "startLine": 126
                }
              },
              "logicalLocations": [
                {
                  "name": "verifyAssignment(String, String, PublicKey)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.CryptoUtil.verifyAssignment(String, String, PublicKey)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d88a06bd-4dfb-4e76-b450-999ababf4866",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                },
                "region": {
                  "startLine": 51
                }
              },
              "logicalLocations": [
                {
                  "name": "getBasicAuth(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.EncodingAssignment.getBasicAuth(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-6f5ef8f6-a79c-4f84-814c-d069981c499a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.EncodingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 72
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.EncodingAssignment.completed(HttpServletRequest, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-bd0db154-6ac2-46ca-bd06-a5df1164ee16",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.EncodingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/EncodingAssignment.java"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 56
                }
              },
              "logicalLocations": [
                {
                  "name": "getBasicAuth(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.EncodingAssignment.getBasicAuth(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-20f29396-91e1-4440-8bbe-268b113fbba7",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "getMd5(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.getMd5(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-96a74a27-441e-4d5e-9378-ac14631ce5e6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 71
                }
              },
              "logicalLocations": [
                {
                  "name": "getSha256(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.getSha256(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-efe7292c-e02e-44e7-a970-1680598c538c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 62
                }
              },
              "logicalLocations": [
                {
                  "name": "getMd5(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.getMd5(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c9feb8ce-38ec-4f28-9083-329a96d68ddf",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 76
                }
              },
              "logicalLocations": [
                {
                  "name": "getSha256(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.getSha256(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a254b907-7a0d-4259-837e-94b840696b65",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.HashingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 96
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.completed(HttpServletRequest, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-4609d161-7560-481d-beca-fd9b82459c02",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.HashingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 62
                }
              },
              "logicalLocations": [
                {
                  "name": "getMd5(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.getMd5(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e7e7859c-9494-4201-b7db-4fea2dbf178f",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.HashingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 76
                }
              },
              "logicalLocations": [
                {
                  "name": "getSha256(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.getSha256(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-83cee292-af9e-489f-a651-fa08ec232449",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unsafe hash equals",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 90
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.completed(HttpServletRequest, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8b754e17-95f2-444e-986a-12507ff336eb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unsafe hash equals",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 92
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.completed(HttpServletRequest, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e26ba4d1-634e-40bb-ab3e-2245119a1cf2",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "MD2, MD4 and MD5 are weak hash functions",
            "id": "default",
            "arguments": [
              "MD5"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/HashingAssignment.java"
                },
                "region": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "getMd5(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.HashingAssignment.getMd5(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7f92842f-4fea-4a6b-bb20-89fee8836245",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/SecureDefaultsAssignment.java"
                },
                "region": {
                  "startLine": 50
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.SecureDefaultsAssignment.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d6c8d16a-7b1d-4dc5-a412-81bce79fefea",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.SecureDefaultsAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/SecureDefaultsAssignment.java"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 57
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.SecureDefaultsAssignment.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-74f47e5d-c7c9-4d69-8dfe-d5005cf9c286",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java"
                },
                "region": {
                  "startLine": 80
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.SigningAssignment.completed(HttpServletRequest, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-11ed5050-2467-494f-a622-2e091a6fdf29",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 64
                }
              },
              "logicalLocations": [
                {
                  "name": "getPrivateKey(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.SigningAssignment.getPrivateKey(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-5da0318c-054b-41fa-abfb-e341ade4c28c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.SigningAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java"
                },
                "region": {
                  "startLine": 72,
                  "endLine": 89
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.SigningAssignment.completed(HttpServletRequest, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-33556e05-549d-4870-b5de-06402ef86fbe",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.SigningAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/SigningAssignment.java"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 64
                }
              },
              "logicalLocations": [
                {
                  "name": "getPrivateKey(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.SigningAssignment.getPrivateKey(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c0bf5665-c379-4384-a14b-8fa3f6e3bcac",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.cryptography.XOREncodingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/cryptography/XOREncodingAssignment.java"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 43
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.cryptography.XOREncodingAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-4cf5d6f8-513c-45a4-ab98-8d7a7406dfe9",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.csrf.CSRFConfirmFlag1"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFConfirmFlag1.java"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFConfirmFlag1.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8058149d-a27e-47ea-b611-ca3f794e1c16",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.csrf.CSRFFeedback"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFFeedback.java"
                },
                "region": {
                  "startLine": 62,
                  "endLine": 81
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFFeedback.completed(HttpServletRequest, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a610c9c8-66f4-4da5-b69f-93bf32d3ea8a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.csrf.CSRFFeedback"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFFeedback.java"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 90
                }
              },
              "logicalLocations": [
                {
                  "name": "flag(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFFeedback.flag(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-532aba09-2b4e-4f3c-bf6e-467321c7786b",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                },
                "region": {
                  "startLine": 57
                }
              },
              "logicalLocations": [
                {
                  "name": "invoke(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFGetFlag.invoke(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-717f84f8-c17a-4adc-9d11-ace7b4b59f50",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                },
                "region": {
                  "startLine": 63
                }
              },
              "logicalLocations": [
                {
                  "name": "invoke(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFGetFlag.invoke(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f5e3dc33-dd17-430d-82a1-22211f3d1f93",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                },
                "region": {
                  "startLine": 74
                }
              },
              "logicalLocations": [
                {
                  "name": "invoke(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFGetFlag.invoke(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8487de71-d8f3-4a5d-b15d-503bb162d94c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.csrf.CSRFGetFlag"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFGetFlag.java"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 81
                }
              },
              "logicalLocations": [
                {
                  "name": "invoke(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFGetFlag.invoke(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d5851976-3e41-4f11-b5d2-914244cd84c9",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.csrf.CSRFLogin"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/CSRFLogin.java"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 59
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.CSRFLogin.completed(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-0207a779-8e9a-47aa-9682-6df449ee0ade",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.csrf.ForgedReviews"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/csrf/ForgedReviews.java"
                },
                "region": {
                  "startLine": 92,
                  "endLine": 113
                }
              },
              "logicalLocations": [
                {
                  "name": "createNewReview(String, Integer, String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.csrf.ForgedReviews.createNewReview(String, Integer, String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-3f96960b-6597-499b-8574-25ddfecdd9a3",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Object deserialization is used in {1}",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.deserialization.InsecureDeserializationTask.completed(String)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                },
                "region": {
                  "startLine": 60
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.deserialization.InsecureDeserializationTask.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c07ec470-b179-4542-b459-893ae2bc5f01",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.deserialization.InsecureDeserializationTask"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/InsecureDeserializationTask.java"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 83
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.deserialization.InsecureDeserializationTask.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-86323406-8214-4bc2-939a-6c10bf957dba",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Object deserialization is used in {1}",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.deserialization.SerializationHelper.fromString(String)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/deserialization/SerializationHelper.java"
                },
                "region": {
                  "startLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "fromString(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.deserialization.SerializationHelper.fromString(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-23fc0f21-ec9c-4b0d-8fa2-79708827f6d9",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.hijacksession.HijackSessionAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/HijackSessionAssignment.java"
                },
                "region": {
                  "startLine": 69,
                  "endLine": 82
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, String, String, HttpServletResponse)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.hijacksession.HijackSessionAssignment.login(String, String, String, HttpServletResponse)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-309435c5-1134-4b00-b4b5-9d7c1ee53853",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java"
                },
                "region": {
                  "startLine": 48
                }
              },
              "logicalLocations": [
                {
                  "name": "<static initializer for HijackSessionAuthenticationProvider>()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.hijacksession.cas.HijackSessionAuthenticationProvider.<static initializer for HijackSessionAuthenticationProvider>()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a6c6b5d8-080e-4152-8f07-3a40b9b410ce",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.concurrent.ThreadLocalRandom"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/hijacksession/cas/HijackSessionAuthenticationProvider.java"
                },
                "region": {
                  "startLine": 79
                }
              },
              "logicalLocations": [
                {
                  "name": "authorizedUserAutoLogin()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.hijacksession.cas.HijackSessionAuthenticationProvider.authorizedUserAutoLogin()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d6f7d819-7fb4-48fe-a813-5e1e75313f0a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.htmltampering.HtmlTamperingTask"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/htmltampering/HtmlTamperingTask.java"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 43
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.htmltampering.HtmlTamperingTask.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-2af1fecc-ff3c-47ec-a1e4-48ec40a1f973",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.httpbasics.HttpBasicsLesson"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsLesson.java"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.httpbasics.HttpBasicsLesson.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-1a1e6f13-19ed-4acb-bb5a-ee2d4ada6ad0",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsQuiz.java"
                },
                "region": {
                  "startLine": 45
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.httpbasics.HttpBasicsQuiz.completed(String, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-06475e4d-1632-4713-abe2-5a669ca87d37",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsQuiz.java"
                },
                "region": {
                  "startLine": 48
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.httpbasics.HttpBasicsQuiz.completed(String, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ab0ec048-5e1c-4d3e-b7b4-908d732229c2",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.httpbasics.HttpBasicsQuiz"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/httpbasics/HttpBasicsQuiz.java"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.httpbasics.HttpBasicsQuiz.completed(String, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-0bb8d8dd-9d05-4b79-9ea5-9e4224ef91f2",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/httpproxies/HttpBasicsInterceptRequest.java"
                },
                "region": {
                  "startLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(Boolean, String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.httpproxies.HttpBasicsInterceptRequest.completed(Boolean, String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-60097a09-6a33-4869-a6ba-22e973d116eb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/httpproxies/HttpBasicsInterceptRequest.java"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 56
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(Boolean, String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.httpproxies.HttpBasicsInterceptRequest.completed(Boolean, String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-eb3169f5-becb-44ea-b0b3-e35d225cabc7",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.httpproxies.HttpBasicsInterceptRequest"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/httpproxies/HttpBasicsInterceptRequest.java"
                },
                "region": {
                  "startLine": 47,
                  "endLine": 56
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(Boolean, String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.httpproxies.HttpBasicsInterceptRequest.completed(Boolean, String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-83d55151-de8c-4a49-986d-facc9c0cd6ef",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java"
                },
                "region": {
                  "startLine": 50
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORDiffAttributes.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-08c514f4-74ac-41ee-9306-dc3ff329d44a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java"
                },
                "region": {
                  "startLine": 51
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORDiffAttributes.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-196fed9c-a33c-47cd-a046-acdf20a6f753",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java"
                },
                "region": {
                  "startLine": 52
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORDiffAttributes.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8d78afdc-31a0-43ca-a19e-eaeda1e1791c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java"
                },
                "region": {
                  "startLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORDiffAttributes.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7c1422e4-264c-4bf9-8928-9ca7c479ee3d",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.idor.IDORDiffAttributes"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORDiffAttributes.java"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 56
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORDiffAttributes.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b5187994-ce0b-403d-870b-2fd6e59f39ce",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfile.java"
                },
                "region": {
                  "startLine": 73
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, UserProfile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDOREditOtherProfile.completed(String, UserProfile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-70d32ac5-adca-46c0-8b1d-858e4660f6a2",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfile.java"
                },
                "region": {
                  "startLine": 81
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, UserProfile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDOREditOtherProfile.completed(String, UserProfile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ba5b8ece-ac49-4ab4-83f7-3c3c72d6f43c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfile.java"
                },
                "region": {
                  "startLine": 89
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, UserProfile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDOREditOtherProfile.completed(String, UserProfile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-35dd719d-1bff-4e62-9bac-c4cafef35e92",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.idor.IDOREditOtherProfile"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDOREditOtherProfile.java"
                },
                "region": {
                  "startLine": 58,
                  "endLine": 112
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, UserProfile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDOREditOtherProfile.completed(String, UserProfile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-4ef279d4-93d7-4166-aa29-7feb55f89958",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Hard coded password",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORLogin.java"
                },
                "region": {
                  "startLine": 46
                }
              },
              "logicalLocations": [
                {
                  "name": "initIDORInfo()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORLogin.initIDORInfo()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-1b511480-ed4d-40ac-957b-4bc5a4e07c89",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Hard coded password",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORLogin.java"
                },
                "region": {
                  "startLine": 52
                }
              },
              "logicalLocations": [
                {
                  "name": "initIDORInfo()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORLogin.initIDORInfo()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-90d5d927-bd6e-44d6-9a1c-18d795a5ef4d",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.idor.IDORLogin"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORLogin.java"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 74
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORLogin.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b4c36c55-9256-452b-976d-8035eff84530",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.idor.IDORViewOtherProfile"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOtherProfile.java"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 81
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, HttpServletResponse)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORViewOtherProfile.completed(String, HttpServletResponse)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-4e4329b3-c963-43bf-a833-4a43759375ce",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.idor.IDORViewOwnProfileAltUrl"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/idor/IDORViewOwnProfileAltUrl.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 72
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.idor.IDORViewOwnProfileAltUrl.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-cace8dcd-0893-4c1b-9939-7454eb625a32",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.insecurelogin.InsecureLoginTask"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/insecurelogin/InsecureLoginTask.java"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.insecurelogin.InsecureLoginTask.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b21289bf-f829-4dca-9544-50973be5c262",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTDecodeEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTDecodeEndpoint.java"
                },
                "region": {
                  "startLine": 16,
                  "endLine": 19
                }
              },
              "logicalLocations": [
                {
                  "name": "decode(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTDecodeEndpoint.decode(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-572bcea9-da5b-4056-a61b-da665161e16a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTQuiz"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTQuiz.java"
                },
                "region": {
                  "startLine": 21,
                  "endLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String[], String[])",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTQuiz.completed(String[], String[])",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e723defa-66c3-4115-bf1e-db11b21055c1",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 77
                }
              },
              "logicalLocations": [
                {
                  "name": "follow(Map)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.follow(Map)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-911b3bcb-fa65-4e63-8116-9d68ac8a9150",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 103,
                  "endLine": 120
                }
              },
              "logicalLocations": [
                {
                  "name": "checkout(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.checkout(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-0d19f957-7237-496a-b98b-cb972149190f",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 80
                }
              },
              "logicalLocations": [
                {
                  "name": "follow(Map)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.follow(Map)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-2e3f29b1-47fb-4123-a824-da84882a496d",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTRefreshEndpoint.java"
                },
                "region": {
                  "startLine": 129,
                  "endLine": 151
                }
              },
              "logicalLocations": [
                {
                  "name": "newToken(String, Map)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTRefreshEndpoint.newToken(String, Map)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-2671220f-a17a-4163-9b32-55f068712c8f",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 85
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTSecretKeyEndpoint.login(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-141b87bf-e87e-4049-b0e7-340e564cc3bb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Predictable pseudorandom number generator",
            "id": "default",
            "arguments": [
              "java.util.Random"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 52
                }
              },
              "logicalLocations": [
                {
                  "name": "<static initializer for JWTSecretKeyEndpoint>()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTSecretKeyEndpoint.<static initializer for JWTSecretKeyEndpoint>()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-9a1cf776-3135-4d74-8fb9-c0f9200f3e3f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 61
                }
              },
              "logicalLocations": [
                {
                  "name": "getSecretToken()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTSecretKeyEndpoint.getSecretToken()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-3d01f48a-529c-4f27-aba8-497e56b45fae",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTSecretKeyEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTSecretKeyEndpoint.java"
                },
                "region": {
                  "startLine": 78,
                  "endLine": 92
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTSecretKeyEndpoint.login(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-cd8e1eb1-23ac-4176-881a-bd52a18900b4",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 146,
                  "endLine": 167
                }
              },
              "logicalLocations": [
                {
                  "name": "getVotes(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.getVotes(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b85ee79a-ff21-45f0-b8f4-7c82a881ce8c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 121,
                  "endLine": 140
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, HttpServletResponse)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.login(String, HttpServletResponse)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-923d6b8d-d173-406c-b245-e4a3abf533ce",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 199,
                  "endLine": 213
                }
              },
              "logicalLocations": [
                {
                  "name": "resetVotes(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.resetVotes(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-95a8fb43-a73b-4103-adf9-ab8838347208",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/JWTVotesEndpoint.java"
                },
                "region": {
                  "startLine": 176,
                  "endLine": 190
                }
              },
              "logicalLocations": [
                {
                  "name": "vote(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.JWTVotesEndpoint.vote(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-71c3af8b-5153-42f7-840b-4a31aa95fb7d",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderJKUEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "follow(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderJKUEndpoint.follow(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e671180e-ce81-49f8-9d9f-7fca9ab33bc7",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderJKUEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderJKUEndpoint.java"
                },
                "region": {
                  "startLine": 45,
                  "endLine": 66
                }
              },
              "logicalLocations": [
                {
                  "name": "resetVotes(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderJKUEndpoint.resetVotes(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7a5267d4-de1a-40cd-b8ed-fd4fd48fae8a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderKIDEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpoint.java"
                },
                "region": {
                  "startLine": 66,
                  "endLine": 69
                }
              },
              "logicalLocations": [
                {
                  "name": "follow(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderKIDEndpoint.follow(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a7bd7122-888b-450b-9561-9b154f4aa23d",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderKIDEndpoint"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/jwt/claimmisuse/JWTHeaderKIDEndpoint.java"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 117
                }
              },
              "logicalLocations": [
                {
                  "name": "resetVotes(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.jwt.claimmisuse.JWTHeaderKIDEndpoint.resetVotes(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f1cf0ab6-fda1-485e-821e-640c922d9c8b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.lessontemplate.SampleAttack"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 70
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.lessontemplate.SampleAttack.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-3e39fdb4-e21e-4252-8e41-8e39107b40dd",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.lessontemplate.SampleAttack"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/lessontemplate/SampleAttack.java"
                },
                "region": {
                  "startLine": 81
                }
              },
              "logicalLocations": [
                {
                  "name": "getItemsInBasket(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.lessontemplate.SampleAttack.getItemsInBasket(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a8facb0a-564b-4450-8637-12617f1f47a4",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.logging.LogBleedingTask"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/logging/LogBleedingTask.java"
                },
                "region": {
                  "startLine": 56,
                  "endLine": 64
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.logging.LogBleedingTask.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-5d1191e2-7c45-4121-9c1e-2ec2dc9fb33c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.logging.LogSpoofingTask"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/logging/LogSpoofingTask.java"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 49
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.logging.LogSpoofingTask.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-40b1b5ad-19bb-41ef-bf8f-e0ef2135d682",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.missingac.MissingFunctionACHiddenMenus"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACHiddenMenus.java"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.missingac.MissingFunctionACHiddenMenus.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-0bde4e02-7329-4121-bcd6-abd14fafb18f",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.missingac.MissingFunctionACUsers"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACUsers.java"
                },
                "region": {
                  "startLine": 102,
                  "endLine": 106
                }
              },
              "logicalLocations": [
                {
                  "name": "addUser(User)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.missingac.MissingFunctionACUsers.addUser(User)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-0b4cb521-57fd-4545-96be-c56eb2db9b50",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.missingac.MissingFunctionACYourHash"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 58
                }
              },
              "logicalLocations": [
                {
                  "name": "simple(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.missingac.MissingFunctionACYourHash.simple(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7a6701b7-cf3d-49a2-b663-89e028a7ab59",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unsafe hash equals",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHash.java"
                },
                "region": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "simple(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.missingac.MissingFunctionACYourHash.simple(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ebc509c1-9a23-4f88-ae0c-40f9d13f236d",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.missingac.MissingFunctionACYourHashAdmin"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 66
                }
              },
              "logicalLocations": [
                {
                  "name": "admin(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.missingac.MissingFunctionACYourHashAdmin.admin(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-773131a6-5815-4d56-b507-55d2f5c358bd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Unsafe hash equals",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/missingac/MissingFunctionACYourHashAdmin.java"
                },
                "region": {
                  "startLine": 63
                }
              },
              "logicalLocations": [
                {
                  "name": "admin(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.missingac.MissingFunctionACYourHashAdmin.admin(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-06bc7793-84ec-4136-bb7a-9a318573e7cf",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/QuestionsAssignment.java"
                },
                "region": {
                  "startLine": 60
                }
              },
              "logicalLocations": [
                {
                  "name": "passwordReset(Map)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.QuestionsAssignment.passwordReset(Map)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8edbfd08-8cb0-47d9-8472-420581c71b6b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/QuestionsAssignment.java"
                },
                "region": {
                  "startLine": 64
                }
              },
              "logicalLocations": [
                {
                  "name": "passwordReset(Map)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.QuestionsAssignment.passwordReset(Map)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-9eabd325-dc0f-42f8-944f-c1f97ee534e6",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.QuestionsAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/QuestionsAssignment.java"
                },
                "region": {
                  "startLine": 57,
                  "endLine": 73
                }
              },
              "logicalLocations": [
                {
                  "name": "passwordReset(Map)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.QuestionsAssignment.passwordReset(Map)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-17c66868-efa5-4ab5-a6f3-5ca7bae0d5cc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Hard coded password",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 88
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.login(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-5b877e5d-c84b-4d21-9205-7708f0b083fc",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 116,
                  "endLine": 132
                }
              },
              "logicalLocations": [
                {
                  "name": "changePassword(PasswordChangeForm, BindingResult)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.changePassword(PasswordChangeForm, BindingResult)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8e95e136-880f-419e-9674-613b1ef7f0b5",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 85,
                  "endLine": 94
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.login(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-74e7f25d-e744-4d08-a6d5-def4c934316d",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 99,
                  "endLine": 110
                }
              },
              "logicalLocations": [
                {
                  "name": "resetPassword(String, Model)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.resetPassword(String, Model)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b385c875-fdff-44b9-b87d-9979b9308f6d",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 121
                }
              },
              "logicalLocations": [
                {
                  "name": "changePassword(PasswordChangeForm, BindingResult)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.changePassword(PasswordChangeForm, BindingResult)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7430c64a-6655-47fc-9ee3-abc4538f7690",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 125
                }
              },
              "logicalLocations": [
                {
                  "name": "changePassword(PasswordChangeForm, BindingResult)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.changePassword(PasswordChangeForm, BindingResult)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-bad888cf-714f-4a53-841c-e2793ee61bb1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 131
                }
              },
              "logicalLocations": [
                {
                  "name": "changePassword(PasswordChangeForm, BindingResult)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.changePassword(PasswordChangeForm, BindingResult)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c1a2bf02-cf1f-401e-bb5b-c0eff67e96d4",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 105
                }
              },
              "logicalLocations": [
                {
                  "name": "resetPassword(String, Model)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.resetPassword(String, Model)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-aa38cb5b-fb3f-4224-b171-45e5a26d4d80",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignment.java"
                },
                "region": {
                  "startLine": 108
                }
              },
              "logicalLocations": [
                {
                  "name": "resetPassword(String, Model)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignment.resetPassword(String, Model)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8e941572-2f9a-40f6-9d0c-24f7201849ed",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignmentForgotPassword"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/ResetLinkAssignmentForgotPassword.java"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 87
                }
              },
              "logicalLocations": [
                {
                  "name": "sendPasswordResetLink(String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.ResetLinkAssignmentForgotPassword.sendPasswordResetLink(String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-4331f113-65f8-4b0c-bca2-5a0b3802a3d0",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.SecurityQuestionAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SecurityQuestionAssignment.java"
                },
                "region": {
                  "startLine": 96,
                  "endLine": 103
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.SecurityQuestionAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-54c3e45e-7b37-4376-86be-9ad22b303281",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.SimpleMailAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SimpleMailAssignment.java"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 68
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.SimpleMailAssignment.login(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7ea62967-4bec-48f6-8709-c43c7de58dc5",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.passwordreset.SimpleMailAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/passwordreset/SimpleMailAssignment.java"
                },
                "region": {
                  "startLine": 77,
                  "endLine": 78
                }
              },
              "logicalLocations": [
                {
                  "name": "resetPassword(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.passwordreset.SimpleMailAssignment.resetPassword(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-81fa321a-5d5d-45eb-85ea-a7876dbdce15",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.pathtraversal.ProfileUpload"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUpload.java"
                },
                "region": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "uploadFileHandler(MultipartFile, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUpload.uploadFileHandler(MultipartFile, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-55ccac66-58e9-4ad2-ab47-eff7db5488ba",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 42
                }
              },
              "logicalLocations": [
                {
                  "name": "execute(MultipartFile, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadBase.execute(MultipartFile, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e5a2ec55-e5e6-4c31-95ba-122e1ea9f1a6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 62
                }
              },
              "logicalLocations": [
                {
                  "name": "cleanupAndCreateDirectoryForUser()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadBase.cleanupAndCreateDirectoryForUser()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-add6ec14-5c02-4234-a031-6dc289ac1ca6",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 96
                }
              },
              "logicalLocations": [
                {
                  "name": "getProfilePictureAsBase64()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadBase.getProfilePictureAsBase64()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b40cfdf4-a4f2-4ab9-9a57-c7056270352e",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "FilenameUtils not filtering null bytes",
            "id": "default",
            "arguments": [
              "isExtension"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java"
                },
                "region": {
                  "startLine": 101
                }
              },
              "logicalLocations": [
                {
                  "name": "lambda$getProfilePictureAsBase64$0(File)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadBase.lambda$getProfilePictureAsBase64$0(File)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a6a241c8-d03c-4e4c-9b09-3b6c892ff808",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadFix"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadFix.java"
                },
                "region": {
                  "startLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "uploadFileHandler(MultipartFile, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadFix.uploadFileHandler(MultipartFile, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8136f2dd-99d5-4ce7-bb99-2b9bd7c6d99b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRemoveUserInput"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRemoveUserInput.java"
                },
                "region": {
                  "startLine": 36
                }
              },
              "logicalLocations": [
                {
                  "name": "uploadFileHandler(MultipartFile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRemoveUserInput.uploadFileHandler(MultipartFile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f4b34c14-bb22-4970-a15b-403c87c0e676",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 75
                }
              },
              "logicalLocations": [
                {
                  "name": "execute(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.execute(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-57c2d4ce-4d7b-48fb-b761-cf523fc6b21c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "logicalLocations": [
                {
                  "name": "new ProfileUploadRetrieval(String)",
                  "fullyQualifiedName": "new org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-408c0fae-8e58-49a5-bbc7-cb8b591e8a2f",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 92
                }
              },
              "logicalLocations": [
                {
                  "name": "getProfilePicture(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.getProfilePicture(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a3d80ad5-c130-41a8-947d-4385a39d8100",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 57
                }
              },
              "logicalLocations": [
                {
                  "name": "initAssignment()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.initAssignment()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-5573d75d-f6af-435c-a813-f72853400928",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 75,
                  "endLine": 78
                }
              },
              "logicalLocations": [
                {
                  "name": "execute(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.execute(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-bd5dc39f-4570-431f-8a1d-e4f49a391fa8",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadRetrieval.java"
                },
                "region": {
                  "startLine": 84,
                  "endLine": 114
                }
              },
              "logicalLocations": [
                {
                  "name": "getProfilePicture(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileUploadRetrieval.getProfilePicture(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f29be878-02a0-407b-9cf1-a80df42d7bfd",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/nio/file/Files.createTempDirectory(Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                },
                "region": {
                  "startLine": 61
                }
              },
              "logicalLocations": [
                {
                  "name": "processZipUpload(MultipartFile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileZipSlip.processZipUpload(MultipartFile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8f1813a6-de64-4120-a235-a7565a108899",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                },
                "region": {
                  "startLine": 73
                }
              },
              "logicalLocations": [
                {
                  "name": "processZipUpload(MultipartFile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileZipSlip.processZipUpload(MultipartFile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-70875d98-c0b4-42c1-bd6d-c7354f4ccf2a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.pathtraversal.ProfileZipSlip"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java"
                },
                "region": {
                  "startLine": 52,
                  "endLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "uploadFileHandler(MultipartFile)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.pathtraversal.ProfileZipSlip.uploadFileHandler(MultipartFile)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-dab39ec7-2a98-44fc-a5ee-c5acfc5fa7af",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "An unsafe string is potentially injected into an XML string",
            "id": "default",
            "arguments": [
              "java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;",
              "org.owasp.webgoat.lessons.securepasswords.SecurePasswordsAssignment.completed(String)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java"
                },
                "region": {
                  "startLine": 50
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.securepasswords.SecurePasswordsAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-73a72c4e-d54e-4efb-b1fd-33129376e810",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "An unsafe string is potentially injected into an XML string",
            "id": "default",
            "arguments": [
              "java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;",
              "org.owasp.webgoat.lessons.securepasswords.SecurePasswordsAssignment.completed(String)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java"
                },
                "region": {
                  "startLine": 72
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.securepasswords.SecurePasswordsAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-9685e70d-c019-4a91-b417-5ec5bbd23b80",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.securepasswords.SecurePasswordsAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/securepasswords/SecurePasswordsAssignment.java"
                },
                "region": {
                  "startLine": 43,
                  "endLine": 91
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.securepasswords.SecurePasswordsAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c102a0df-d17e-4713-b46b-004dd5faaf8b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 111
                }
              },
              "logicalLocations": [
                {
                  "name": "cookieLoginFlow(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.spoofcookie.SpoofCookieAssignment.cookieLoginFlow(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-40c63891-bb12-4fca-a6cd-ec649b94a606",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 86
                }
              },
              "logicalLocations": [
                {
                  "name": "credentialsLoginFlow(String, String, HttpServletResponse)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.spoofcookie.SpoofCookieAssignment.credentialsLoginFlow(String, String, HttpServletResponse)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-15713625-c51b-4c3f-82e8-0f97bbebfddd",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.spoofcookie.SpoofCookieAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 79,
                  "endLine": 82
                }
              },
              "logicalLocations": [
                {
                  "name": "cleanup(HttpServletResponse)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.spoofcookie.SpoofCookieAssignment.cleanup(HttpServletResponse)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-67d8970c-4cb1-45b3-a590-8bb295b1ce8b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.spoofcookie.SpoofCookieAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/spoofcookie/SpoofCookieAssignment.java"
                },
                "region": {
                  "startLine": 70,
                  "endLine": 73
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, String, String, HttpServletResponse)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.spoofcookie.SpoofCookieAssignment.login(String, String, String, HttpServletResponse)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8090aef7-322c-485f-a7cd-65e71efa14b8",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallenge"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 90
                }
              },
              "logicalLocations": [
                {
                  "name": "registerNewUser(String, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallenge.registerNewUser(String, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ce3ed271-9c5f-4014-85ed-e36336093585",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallengeLogin"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallengeLogin.java"
                },
                "region": {
                  "startLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "login(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionChallengeLogin.login(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-cc447bb4-b34e-49dc-9854-81cdd6d090f7",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6a.java"
                },
                "region": {
                  "startLine": 57
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6a.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-32f15369-0a4a-46e0-b8d7-1f6671615608",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Information Exposure Through An Error Message",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 71
                }
              },
              "logicalLocations": [
                {
                  "name": "getPassword()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b.getPassword()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-4b5037b0-e31c-492f-b200-9126b1c60fe1",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Information Exposure Through An Error Message",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 75
                }
              },
              "logicalLocations": [
                {
                  "name": "getPassword()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b.getPassword()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-57991223-f1d8-4609-8aa5-57208d04ff2c",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionLesson6b.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionLesson6b.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-9bcc07f2-0556-4abc-b955-44185cbdc22a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionQuiz"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionQuiz.java"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 78
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String[], String[], String[], String[], String[])",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.advanced.SqlInjectionQuiz.completed(String[], String[], String[], String[], String[])",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f1445048-5825-4f1c-b16c-66af01aa7865",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson10.java"
                },
                "region": {
                  "startLine": 59
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson10.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f7128cb6-f933-4db5-b714-77ab6a4ace05",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson2.java"
                },
                "region": {
                  "startLine": 59
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson2.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e862e610-86f1-47c2-91c5-5a081c4e2ba2",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson3.java"
                },
                "region": {
                  "startLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson3.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c916c3c3-c28f-4c65-b1db-490b32c25141",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson4"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson4.java"
                },
                "region": {
                  "startLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson4.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ffe22cb8-92a0-42d6-891a-bf95f9130652",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5.java"
                },
                "region": {
                  "startLine": 71,
                  "endLine": 72
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-cecf7dda-bd20-4799-b333-ee1d033b3359",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5a.java"
                },
                "region": {
                  "startLine": 56
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5a.completed(String, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-1048cdb7-84a9-4cdf-b0e2-1e14a8a7efec",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java"
                },
                "region": {
                  "startLine": 58
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson5b.completed(String, String, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-3cccd12d-a218-4d84-9de4-6b141db8d557",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson8.java"
                },
                "region": {
                  "startLine": 60
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson8.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-6de7d08f-f430-4937-917e-8ee98f70b264",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson9.java"
                },
                "region": {
                  "startLine": 61
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.introduction.SqlInjectionLesson9.completed(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-11c9e181-ae7c-4f6b-b360-3fad5762903b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/Servers.java"
                },
                "region": {
                  "startLine": 68,
                  "endLine": 91
                }
              },
              "logicalLocations": [
                {
                  "name": "sort(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.mitigation.Servers.sort(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-2412d64c-d451-40de-9b74-574ccf37b0ef",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlInjectionLesson10a"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10a.java"
                },
                "region": {
                  "startLine": 54,
                  "endLine": 68
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String, String, String, String, String, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlInjectionLesson10a.completed(String, String, String, String, String, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-8b014b1a-ed68-4925-a530-5e1d20d5afb8",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Information Exposure Through An Error Message",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                },
                "region": {
                  "startLine": 130
                }
              },
              "logicalLocations": [
                {
                  "name": "getJavaFileContentsAsString(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlInjectionLesson10b.getJavaFileContentsAsString(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-55ffde72-cceb-431e-b3cb-2fc0a19f32cc",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlInjectionLesson10b"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson10b.java"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 101
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlInjectionLesson10b.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-0d8132c5-b88d-47a8-bd49-c17e67c20b96",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlInjectionLesson13"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson13.java"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 71
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlInjectionLesson13.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-95af7f50-b4e8-4d73-8695-1d21faba3271",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlOnlyInputValidation"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidation.java"
                },
                "region": {
                  "startLine": 48,
                  "endLine": 52
                }
              },
              "logicalLocations": [
                {
                  "name": "attack(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlOnlyInputValidation.attack(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-802d3257-b498-49ed-a656-6398828a62ca",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlOnlyInputValidationOnKeywords"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlOnlyInputValidationOnKeywords.java"
                },
                "region": {
                  "startLine": 53,
                  "endLine": 58
                }
              },
              "logicalLocations": [
                {
                  "name": "attack(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.sqlinjection.mitigation.SqlOnlyInputValidationOnKeywords.attack(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d6781ffb-b009-4ec6-8004-181914073199",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Information Exposure Through An Error Message",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                },
                "region": {
                  "startLine": 62
                }
              },
              "logicalLocations": [
                {
                  "name": "stealTheCheese(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.ssrf.SSRFTask1.stealTheCheese(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e1526996-d751-40e1-b9de-59438c4cfc23",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.ssrf.SSRFTask1"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask1.java"
                },
                "region": {
                  "startLine": 40
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.ssrf.SSRFTask1.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-3bed1161-3139-4221-b86d-0dcbab4803b5",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.ssrf.SSRFTask2"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                },
                "region": {
                  "startLine": 45
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.ssrf.SSRFTask2.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f60fdaa9-3e6a-4017-acda-6520af85c5c0",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "URLConnection Server-Side Request Forgery (SSRF) and File Disclosure",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/ssrf/SSRFTask2.java"
                },
                "region": {
                  "startLine": 51
                }
              },
              "logicalLocations": [
                {
                  "name": "furBall(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.ssrf.SSRFTask2.furBall(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-47ed5401-8d48-4052-af15-24dcab0513ae",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.vulnerablecomponents.VulnerableComponentsLesson"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/vulnerablecomponents/VulnerableComponentsLesson.java"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 73
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.vulnerablecomponents.VulnerableComponentsLesson.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ecd6997a-898d-454a-bb6b-c8e5fd511385",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.webwolfintroduction.LandingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/LandingAssignment.java"
                },
                "region": {
                  "startLine": 51,
                  "endLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "click(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.webwolfintroduction.LandingAssignment.click(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e2673d7d-bb44-4c20-8b4a-90b8de967547",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.webwolfintroduction.LandingAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/LandingAssignment.java"
                },
                "region": {
                  "startLine": 59,
                  "endLine": 66
                }
              },
              "logicalLocations": [
                {
                  "name": "openPasswordReset(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.webwolfintroduction.LandingAssignment.openPasswordReset(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e459b6b3-15b1-401b-9ded-72f63c00a9c6",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Improper handling of Unicode transformations",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/MailAssignment.java"
                },
                "region": {
                  "startLine": 56
                }
              },
              "logicalLocations": [
                {
                  "name": "sendEmail(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.webwolfintroduction.MailAssignment.sendEmail(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-97cf3af1-c1cd-4763-90af-44c108a2ed12",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.webwolfintroduction.MailAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/MailAssignment.java"
                },
                "region": {
                  "startLine": 86,
                  "endLine": 89
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.webwolfintroduction.MailAssignment.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-edab9c1d-a5d3-435c-aca7-053fe9467882",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.webwolfintroduction.MailAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/webwolfintroduction/MailAssignment.java"
                },
                "region": {
                  "startLine": 55,
                  "endLine": 76
                }
              },
              "logicalLocations": [
                {
                  "name": "sendEmail(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.webwolfintroduction.MailAssignment.sendEmail(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-45c5cd07-c555-47ec-9d12-1103011ce489",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson1"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson1.java"
                },
                "region": {
                  "startLine": 39,
                  "endLine": 42
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson1.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e837f14a-1fe9-4710-9852-214f908bb0c3",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson3"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson3.java"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 84
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson3.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-834246e7-b36a-4546-bbe7-273de631750b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson4"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson4.java"
                },
                "region": {
                  "startLine": 41,
                  "endLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson4.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-4d1ede83-6a67-458b-886a-1b9250c56f94",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "An unsafe string is potentially injected into an XML string",
            "id": "default",
            "arguments": [
              "java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;",
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson5a.completed(Integer, Integer, Integer, Integer, String, String)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java"
                },
                "region": {
                  "startLine": 76
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(Integer, Integer, Integer, Integer, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson5a.completed(Integer, Integer, Integer, Integer, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c5f2020f-b0e2-44e9-8803-9d4ce7aa1a28",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "An unsafe string is potentially injected into an XML string",
            "id": "default",
            "arguments": [
              "java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder;",
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson5a.completed(Integer, Integer, Integer, Integer, String, String)"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java"
                },
                "region": {
                  "startLine": 78
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(Integer, Integer, Integer, Integer, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson5a.completed(Integer, Integer, Integer, Integer, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d73bfcce-ec1b-4d4c-ba2c-25e75b0d5c04",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson5a"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson5a.java"
                },
                "region": {
                  "startLine": 63,
                  "endLine": 100
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(Integer, Integer, Integer, Integer, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson5a.completed(Integer, Integer, Integer, Integer, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-011f3809-8ae0-431a-9f53-da4c5cb2e8ac",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson6a"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingLesson6a.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 54
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingLesson6a.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-b1cd27cf-2788-484f-a5fd-d9b8e3dd2bdd",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.CrossSiteScriptingQuiz"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/CrossSiteScriptingQuiz.java"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 73
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String[], String[], String[], String[], String[])",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.CrossSiteScriptingQuiz.completed(String[], String[], String[], String[], String[])",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-58e40347-90ab-4eaa-9a45-2df859f0dac9",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.DOMCrossSiteScripting"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/DOMCrossSiteScripting.java"
                },
                "region": {
                  "startLine": 42,
                  "endLine": 53
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(Integer, Integer, HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.DOMCrossSiteScripting.completed(Integer, Integer, HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a41c62d3-8270-4331-8579-c3dbb61d007a",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.DOMCrossSiteScriptingVerifier"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/DOMCrossSiteScriptingVerifier.java"
                },
                "region": {
                  "startLine": 50,
                  "endLine": 56
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.DOMCrossSiteScriptingVerifier.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-67db0c8f-5c4d-40b3-a665-ad192c3c108b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.stored.StoredCrossSiteScriptingVerifier"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/stored/StoredCrossSiteScriptingVerifier.java"
                },
                "region": {
                  "startLine": 40,
                  "endLine": 45
                }
              },
              "logicalLocations": [
                {
                  "name": "completed(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.stored.StoredCrossSiteScriptingVerifier.completed(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-37f98a2c-ce8f-4f5d-bce7-e50e0f6dd92f",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xss.stored.StoredXssComments"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xss/stored/StoredXssComments.java"
                },
                "region": {
                  "startLine": 94,
                  "endLine": 106
                }
              },
              "logicalLocations": [
                {
                  "name": "createNewComment(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xss.stored.StoredXssComments.createNewComment(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-33f110d9-daa2-4580-9a1f-9de645357bcb",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                },
                "region": {
                  "startLine": 74
                }
              },
              "logicalLocations": [
                {
                  "name": "createSecretFileWithRandomContents(WebGoatUser)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.BlindSendFileAssignment.createSecretFileWithRandomContents(WebGoatUser)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d997c0f6-f7fe-4322-ab6b-cd1053854a62",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xxe.BlindSendFileAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignment.java"
                },
                "region": {
                  "startLine": 88,
                  "endLine": 104
                }
              },
              "logicalLocations": [
                {
                  "name": "addComment(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.BlindSendFileAssignment.addComment(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-538dff2a-bc77-4f25-a03a-22b1d4fe3021",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "XML parsing vulnerable to XXE (XMLStreamReader)",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/CommentsCache.java"
                },
                "region": {
                  "startLine": 105
                }
              },
              "logicalLocations": [
                {
                  "name": "parseXml(String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.CommentsCache.parseXml(String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-c38c1a78-1941-4b2a-9ec9-09c84edb326f",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xxe.ContentTypeAssignment"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/ContentTypeAssignment.java"
                },
                "region": {
                  "startLine": 64,
                  "endLine": 85
                }
              },
              "logicalLocations": [
                {
                  "name": "createNewUser(HttpServletRequest, String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.ContentTypeAssignment.createNewUser(HttpServletRequest, String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d51c5a24-1bc3-422c-a2ce-52d7495aa295",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                },
                "region": {
                  "startLine": 51
                }
              },
              "logicalLocations": [
                {
                  "name": "logRequest(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.Ping.logRequest(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-022b25be-09de-4018-a6e6-5004f1af0e89",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xxe.Ping"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java"
                },
                "region": {
                  "startLine": 49,
                  "endLine": 59
                }
              },
              "logicalLocations": [
                {
                  "name": "logRequest(String, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.Ping.logRequest(String, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-fb3b9e8b-47f8-4836-9af6-395d0af4ed35",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                },
                "region": {
                  "startLine": 105
                }
              },
              "logicalLocations": [
                {
                  "name": "getSampleDTDFile()",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.SimpleXXE.getSampleDTDFile()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-03b35a0f-6f0f-4bae-a811-950a4e0259fa",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.lessons.xxe.SimpleXXE"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/lessons/xxe/SimpleXXE.java"
                },
                "region": {
                  "startLine": 74,
                  "endLine": 84
                }
              },
              "logicalLocations": [
                {
                  "name": "createNewComment(HttpServletRequest, String)",
                  "fullyQualifiedName": "org.owasp.webgoat.lessons.xxe.SimpleXXE.createNewComment(HttpServletRequest, String)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-fa6a679f-9fde-427b-aa3a-f05f860b790e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 108
                }
              },
              "logicalLocations": [
                {
                  "name": "getFiles(HttpServletRequest, Authentication, TimeZone)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.getFiles(HttpServletRequest, Authentication, TimeZone)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ab9179ff-2a86-47d8-b176-17172fba59b1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 112
                }
              },
              "logicalLocations": [
                {
                  "name": "getFiles(HttpServletRequest, Authentication, TimeZone)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.getFiles(HttpServletRequest, Authentication, TimeZone)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d718463c-da18-43ad-941a-e56934d85c6e",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 88
                }
              },
              "logicalLocations": [
                {
                  "name": "importFile(MultipartFile, Authentication)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.importFile(MultipartFile, Authentication)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-03a97f18-b6eb-4c2f-9b83-7f441219cc6c",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/io/File;Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 97
                }
              },
              "logicalLocations": [
                {
                  "name": "importFile(MultipartFile, Authentication)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.importFile(MultipartFile, Authentication)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-a42cfa70-cdbf-4a48-95b4-05240be0f0a1",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 80
                }
              },
              "logicalLocations": [
                {
                  "name": "getFileLocation()",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.getFileLocation()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-2cdc8939-33f4-4823-8158-f6ede0b2f1f4",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.FileServer"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 80
                }
              },
              "logicalLocations": [
                {
                  "name": "getFileLocation()",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.getFileLocation()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-ae02772f-9ef1-4e7f-b6e4-d3e9b7f4d0ed",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.FileServer"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 107,
                  "endLine": 135
                }
              },
              "logicalLocations": [
                {
                  "name": "getFiles(HttpServletRequest, Authentication, TimeZone)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.getFiles(HttpServletRequest, Authentication, TimeZone)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-7a3957ce-d2cb-42dd-b382-b4fb932950f3",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.FileServer"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java"
                },
                "region": {
                  "startLine": 87,
                  "endLine": 99
                }
              },
              "logicalLocations": [
                {
                  "name": "importFile(MultipartFile, Authentication)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.FileServer.importFile(MultipartFile, Authentication)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-769cb787-b7f0-45ec-bcbc-5224679111c8",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Potential Path Traversal (file read)",
            "id": "default",
            "arguments": [
              "java/io/File.<init>(Ljava/lang/String;)V"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/MvcConfiguration.java"
                },
                "region": {
                  "startLine": 70
                }
              },
              "logicalLocations": [
                {
                  "name": "createDirectory()",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.MvcConfiguration.createDirectory()",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-e871eb8e-e7e7-48e8-93a1-3364202e4214",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF protection disabled",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/WebSecurityConfig.java"
                },
                "region": {
                  "startLine": 64
                }
              },
              "logicalLocations": [
                {
                  "name": "lambda$filterChain$1(CsrfConfigurer)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.WebSecurityConfig.lambda$filterChain$1(CsrfConfigurer)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-db909ffe-d176-44e1-b430-90ce3bb645c7",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.jwt.JWTController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java"
                },
                "region": {
                  "startLine": 26,
                  "endLine": 28
                }
              },
              "logicalLocations": [
                {
                  "name": "decode(MultiValueMap)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.jwt.JWTController.decode(MultiValueMap)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-14751112-72a9-4d3c-b372-d47137483b2b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.jwt.JWTController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/jwt/JWTController.java"
                },
                "region": {
                  "startLine": 36,
                  "endLine": 39
                }
              },
              "logicalLocations": [
                {
                  "name": "encode(MultiValueMap)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.jwt.JWTController.encode(MultiValueMap)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-845063a9-043f-4613-9a88-9246a664ef8b",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.mailbox.MailboxController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                },
                "region": {
                  "startLine": 46,
                  "endLine": 55
                }
              },
              "logicalLocations": [
                {
                  "name": "mail(Authentication, Model)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.mailbox.MailboxController.mail(Authentication, Model)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-d985b90c-fbc3-4a96-8a22-4674b20aed7e",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.mailbox.MailboxController"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/mailbox/MailboxController.java"
                },
                "region": {
                  "startLine": 61,
                  "endLine": 62
                }
              },
              "logicalLocations": [
                {
                  "name": "sendEmail(Email)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.mailbox.MailboxController.sendEmail(Email)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-02ad112e-f583-4c83-b478-3201fd360adc",
          "kind": "fail",
          "level": "warning",
          "message": {
            "text": "Spring CSRF unrestricted RequestMapping",
            "id": "default"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/requests/LandingPage.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "logicalLocations": [
                {
                  "name": "ok(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.requests.LandingPage.ok(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-f94cd625-5e22-4f12-8ccd-6b34c6ed1000",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.requests.LandingPage"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/requests/LandingPage.java"
                },
                "region": {
                  "startLine": 47
                }
              },
              "logicalLocations": [
                {
                  "name": "ok(HttpServletRequest)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.requests.LandingPage.ok(HttpServletRequest)",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "glog-67f05f6b-f2b7-4ec1-bab7-47bfc6f31795",
          "kind": "fail",
          "level": "note",
          "message": {
            "text": "Found Spring endpoint",
            "id": "default",
            "arguments": [
              "org.owasp.webgoat.webwolf.requests.Requests"
            ]
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "src/main/java/org/owasp/webgoat/webwolf/requests/Requests.java"
                },
                "region": {
                  "startLine": 65,
                  "endLine": 74
                }
              },
              "logicalLocations": [
                {
                  "name": "get(Authentication)",
                  "fullyQualifiedName": "org.owasp.webgoat.webwolf.requests.Requests.get(Authentication)",
                  "kind": "function"
                }
              ]
            }
          ]
        }
      ],
      "newlineSequences": [
        "\r\n",
        "\n"
      ]
    }
  ]
}