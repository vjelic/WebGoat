{"id": "CVE-2015-9251", "package": "npm:jquery", "purl": "pkg:npm/jquery@3.4.1", "package_type": "npm", "package_usage": "required", "version": "3.4.1", "fix_version": "1.12.2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Cross Site Scripting (XSS) in jquery\nAffected versions of `jquery` interpret `text/javascript` responses from cross origin ajax requests, and automatically execute the contents in `jQuery.globalEval`, even when the ajax request doesn't contain the `dataType` option.\n\n\n## Recommendation\n\nUpdate to version 3.0.0 or later.\nUpgrade to version 1.12.2 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2016-7103", "package": "npm:jquery-ui", "purl": "pkg:npm/jquery-ui@1.12.1", "package_type": "npm", "package_usage": "optional", "version": "1.12.1", "fix_version": "1.12.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# jQuery UI vulnerable to Cross site Scripting in dialog closeText\nAffected versions of `jquery ui` are vulnerable to a cross site scripting vulnerability when arbitrary user input is supplied as the value of the `closeText` parameter in the `dialog` function. \n\njQuery UI is a library for manipulating UI elements via jQuery.\n\nVersion 1.11.4 has a cross site scripting (XSS) vulnerability in the `closeText` parameter of the `dialog`\tfunction.\tIf your application passes user input to this parameter, it may be vulnerable to XSS via this attack vector.\n\n\n## Recommendation\n\nUpgrade to jQuery UI 1.12.0 or later.\nUpgrade to version 1.12.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-41183", "package": "npm:jquery-ui", "purl": "pkg:npm/jquery-ui@1.12.1", "package_type": "npm", "package_usage": "optional", "version": "1.12.1", "fix_version": "1.13.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# XSS in `*Text` options of the Datepicker widget in jquery ui\n### Impact\nAccepting the value of various `*Text` options of the Datepicker widget from untrusted sources may execute untrusted code. For example, initializing the datepicker in the following way:\n```js\n$( \"#datepicker\" ).datepicker( {\n\tshowButtonPanel: true,\n\tshowOn: \"both\",\n\tcloseText: \"<script>doEvilThing( 'closeText XSS' )</script>\",\n\tcurrentText: \"<script>doEvilThing( 'currentText XSS' )</script>\",\n\tprevText: \"<script>doEvilThing( 'prevText XSS' )</script>\",\n\tnextText: \"<script>doEvilThing( 'nextText XSS' )</script>\",\n\tbuttonText: \"<script>doEvilThing( 'buttonText XSS' )</script>\",\n\tappendText: \"<script>doEvilThing( 'appendText XSS' )</script>\",\n} );\n```\nwill call `doEvilThing` with 6 different parameters coming from all `*Text` options.\n\n### Patches\nThe issue is fixed in jQuery UI 1.13.0. The values passed to various `*Text` options are now always treated as pure text, not HTML.\n\n### Workarounds\nA workaround is to not accept the value of the `*Text` options from untrusted sources.\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues). If you don't find an answer, open a new issue.\nUpgrade to version 1.13.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-41182", "package": "npm:jquery-ui", "purl": "pkg:npm/jquery-ui@1.12.1", "package_type": "npm", "package_usage": "optional", "version": "1.12.1", "fix_version": "1.13.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# XSS in the `altField` option of the Datepicker widget in jquery ui\n### Impact\nAccepting the value of the `altField` option of the Datepicker widget from untrusted sources may execute untrusted code. For example, initializing the datepicker in the following way:\n```js\n$( \"#datepicker\" ).datepicker( {\n\taltField: \"<img onerror='doEvilThing()' src='/404' />\",\n} );\n```\nwill call the `doEvilThing` function.\n\n### Patches\nThe issue is fixed in jQuery UI 1.13.0. Any string value passed to the `altField` option is now treated as a CSS selector.\n\n### Workarounds\nA workaround is to not accept the value of the `altField` option from untrusted sources.\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues). If you don't find an answer, open a new issue.\nUpgrade to version 1.13.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2021-41184", "package": "npm:jquery-ui", "purl": "pkg:npm/jquery-ui@1.12.1", "package_type": "npm", "package_usage": "optional", "version": "1.12.1", "fix_version": "1.13.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# XSS in the `of` option of the `.position()` util in jquery ui\n### Impact\nAccepting the value of the `of` option of the [`.position()` (https://api.jqueryui.com/position/) util from untrusted sources may execute untrusted code. For example, invoking the following code:\n```js\n$( \"#element\" ).position( {\n\tmy: \"left top\",\n\tat: \"right bottom\",\n\tof: \"<img onerror='doEvilThing()' src='/404' />\",\n\tcollision: \"none\"\n} );\n```\nwill call the `doEvilThing()` function.\n\n### Patches\nThe issue is fixed in jQuery UI 1.13.0. Any string value passed to the `of` option is now treated as a CSS selector.\n\n### Workarounds\nA workaround is to not accept the value of the `of` option from untrusted sources.\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues). If you don't find an answer, open a new issue.\nUpgrade to version 1.13.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2022-31160", "package": "npm:jquery-ui", "purl": "pkg:npm/jquery-ui@1.12.1", "package_type": "npm", "package_usage": "optional", "version": "1.12.1", "fix_version": "1.13.2", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# jQuery UI vulnerable to XSS when refreshing a checkboxradio with an HTML like initial text label\n### Impact\nInitializing a checkboxradio widget on an input enclosed within a label makes that parent label contents considered as the input label. If you call `.checkboxradio( \"refresh\" )` on such a widget and the initial HTML contained encoded HTML entities, they will erroneously get decoded. This can lead to potentially executing JavaScript code.\n\nFor example, starting with the following initial secure HTML:\n```html\n<label>\n\t<input id=\"test input\">\n\t&lt;img src=x onerror=\"alert(1)\"&gt;\n</label>\n```\nand calling:\n```js\n$( \"#test input\" ).checkboxradio();\n$( \"#test input\" ).checkboxradio( \"refresh\" );\n```\nwill turn the initial HTML into:\n```html\n<label>\n\t<!\t some jQuery UI elements\t >\n\t<input id=\"test input\">\n\t<img src=x onerror=\"alert(1)\">\n</label>\n```\nand the alert will get executed.\n\n### Patches\nThe bug has been patched in jQuery UI 1.13.2.\n\n### Workarounds\nTo remediate the issue, if you can change the initial HTML, you can wrap all the non input contents of the `label` in a `span`:\n```html\n<label>\n\t<input id=\"test input\">\n\t<span>&lt;img src=x onerror=\"alert(1)\"&gt;</span>\n</label>\n```\n\n### References\nhttps://blog.jqueryui.com/2022/07/jquery ui 1 13 2 released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery UI repo (https://github.com/jquery/jquery ui/issues?q=is%3Aissue+is%3Aopen+sort%3Aupdated desc). If you don't find an answer, open a new issue.\nUpgrade to version 1.13.2 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2019-11358", "package": "npm:jquery", "purl": "pkg:npm/jquery@3.4.1", "package_type": "npm", "package_usage": "required", "version": "3.4.1", "fix_version": "3.4.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# XSS in jQuery as used in Drupal, Backdrop CMS, and other products\njQuery from 1.1.4 until 3.4.0, as used in Drupal, Backdrop CMS, and other products, mishandles `jQuery.extend(true, {}, ...)` because of `Object.prototype` pollution. If an unsanitized source object contained an enumerable `__proto__` property, it could extend the native `Object.prototype`.\nUpgrade to version 3.4.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-11023", "package": "npm:jquery", "purl": "pkg:npm/jquery@3.4.1", "package_type": "npm", "package_usage": "required", "version": "3.4.1", "fix_version": "3.5.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Potential XSS vulnerability in jQuery\n### Impact\nPassing HTML containing `<option>` elements from untrusted sources\t even after sanitizing them\t to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround this issue without upgrading, use [DOMPurify (https://github.com/cure53/DOMPurify) with its `SAFE_FOR_JQUERY` option to sanitize the HTML string before passing it to a jQuery method.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery 3 5 0 released/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo (https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.\nUpgrade to version 3.5.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
{"id": "CVE-2020-11022", "package": "npm:jquery", "purl": "pkg:npm/jquery@3.4.1", "package_type": "npm", "package_usage": "required", "version": "3.4.1", "fix_version": "3.5.0", "severity": "MEDIUM", "cvss_score": "5.0", "short_description": "# Potential XSS vulnerability in jQuery\n### Impact\nPassing HTML from untrusted sources\t even after sanitizing it\t to one of jQuery's DOM manipulation methods (i.e. `.html()`, `.append()`, and others) may execute untrusted code.\n\n### Patches\nThis problem is patched in jQuery 3.5.0.\n\n### Workarounds\nTo workaround the issue without upgrading, adding the following to your code:\n\n```js\njQuery.htmlPrefilter = function( html ) {\n\treturn html;\n};\n```\n\nYou need to use at least jQuery 1.12/2.2 or newer to be able to apply this workaround.\n\n### References\nhttps://blog.jquery.com/2020/04/10/jquery 3 5 0 released/\nhttps://jquery.com/upgrade guide/3.5/\n\n### For more information\nIf you have any questions or comments about this advisory, search for a relevant issue in [the jQuery repo (https://github.com/jquery/jquery/issues). If you don't find an answer, open a new issue.\nUpgrade to version 3.5.0 or later", "related_urls": [], "occurrence_count": 0, "reachable_flows": 0}
